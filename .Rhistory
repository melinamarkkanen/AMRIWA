# Incroporate into new phyloseq object
tax_table(metaxa.com) <- new.tax_metaxa
# Class level
metaxa_top5class <- aggregate_top_taxa(metaxa.com, top = 5, "Class")
metaxa_top5class.p13 <- plot_composition(metaxa_top5class, group_by = "country") +
theme(legend.position = "bottom") + theme_classic() +
theme(axis.text.x = element_text(angle = 90, size = 8), axis.title = element_blank()) +
ggtitle("Relative abundance of top 5 classes, Metaxa2")
metaxa_top5class.p13 +
scale_fill_manual(values = c("#1B9E77","#E6AB02","#7570B3","#E7298A","#66A61E", "#FFFFFF"))
#
metaxa_top5class.p13 +
+     scale_fill_manual(values = c("#1B9E77","#E6AB02","#7570B3","#E7298A","#66A61E", "#FFFFFF"))
metaxa_top5class.p13 +
scale_fill_manual(values = c("#1B9E77","#E6AB02","#7570B3","#E7298A","#66A61E", "#FFFFFF"))
# Use the unfiltered data this time to see the differences in fecal samples etc
metaxa_rel_PHY_orig <- transform_sample_counts(metaxa_PHY, function(x) x/sum(x))
# Load data
metaxa.com <- metaxa_rel_PHY_orig
taxic_metaxa <- as.data.frame(metaxa.com@tax_table)
# Add OTU ids
taxic_metaxa$OTU <- rownames(taxic_metaxa)
colnames(taxic_metaxa)
# Convert into a matrix.
taxmat_metaxa <- as.matrix(taxic_metaxa)
# Convert into phyloseq compatible file.
new.tax_metaxa <- tax_table(taxmat_metaxa)
# Incroporate into new phyloseq object
tax_table(metaxa.com) <- new.tax_metaxa
# Class level
metaxa_top5class <- aggregate_top_taxa(metaxa.com, top = 5, "Class")
metaxa_top5class.p13 <- plot_composition(metaxa_top5class, group_by = "country") +
theme(legend.position = "bottom") + theme_classic() +
theme(axis.text.x = element_text(angle = 90, size = 8), axis.title = element_blank()) +
ggtitle("Relative abundance of top 5 classes, Metaxa2")
metaxa_top5class.p13 +
scale_fill_manual(values = c("#1B9E77","#E6AB02","#7570B3","#E7298A","#66A61E", "#FFFFFF"))
metaxa_top5class.p13 +
scale_fill_manual(values = c("#1B9E77","#E6AB02","#7570B3","#E7298A","#66A61E", "#FFFFFF"))
metaxa_PHY_genus <- tax_glom(metaxa_rel_PHY_orig, "Genus")
metaxa_PHY_genus_abun <- prune_taxa(names(sort(taxa_sums(metaxa_PHY_genus), TRUE)[1:15]),
metaxa_PHY_genus)
# Transform_1
metaxa_PHY_genus_abun_trans <- transform_sample_counts(metaxa_PHY_genus_abun, function(x) x / sum(x))
# Merge by location
metaxa_mrg_loc <- merge_samples(metaxa_PHY_genus_abun_trans, "location")
# Transform_2
metaxa_mrg_loc_trans <- transform_sample_counts(metaxa_mrg_loc, function(x) x / sum(x))
# Normalize by sample number / location
otu_table(metaxa_mrg_loc_trans) <- otu_table(metaxa_mrg_loc_trans)[, ]/as.matrix(table(sample_data(metaxa_PHY)$location))[,
1]
# Set colors
nb.cols <- 15
mycolors <- colorRampPalette(brewer.pal(8, "Paired"))(nb.cols)
# Facet labs
country.labs <- c("1" = "Benin", "2" = "Burkina Faso", "3" = "Finland")
# Plot
metaxa.p14 <- plot_bar(metaxa_mrg_loc_trans, fill = "Genus", title = "15 most abundant genera, Metaxa2") +
facet_grid(~country, scales = "free_x", space = "free_x", labeller = labeller(country = country.labs)) +
theme_classic() +
theme(axis.text.x = element_text(angle=55, hjust=1, size = 10),
axis.title.x = element_blank()) +
ylab("Merged relative abundance (%)") + xlab("") +
scale_fill_manual(values=mycolors) + geom_bar(stat="identity") +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.5, keyheight = 1.5, title = "Genus"))
metaxa.p14
metaxa.p14
metaxa_PHY_genus <- tax_glom(metaxa_rel_PHY, "Genus")
metaxa_PHY_genus_abun <- prune_taxa(names(sort(taxa_sums(metaxa_PHY_genus), TRUE)[1:15]),
metaxa_PHY_genus)
# Transform_1
metaxa_PHY_genus_abun_trans <- transform_sample_counts(metaxa_PHY_genus_abun, function(x) x / sum(x))
# Merge by location
metaxa_mrg_loc <- merge_samples(metaxa_PHY_genus_abun_trans, "location")
# Transform_2
metaxa_mrg_loc_trans <- transform_sample_counts(metaxa_mrg_loc, function(x) x / sum(x))
# Normalize by sample number / location
otu_table(metaxa_mrg_loc_trans) <- otu_table(metaxa_mrg_loc_trans)[, ]/as.matrix(table(sample_data(metaxa_PHY)$location))[,
1]
# Set colors
nb.cols <- 15
mycolors <- colorRampPalette(brewer.pal(8, "Paired"))(nb.cols)
# Facet labs
country.labs <- c("1" = "Benin", "2" = "Burkina Faso", "3" = "Finland")
# Plot
metaxa.p14 <- plot_bar(metaxa_mrg_loc_trans, fill = "Genus", title = "15 most abundant genera, Metaxa2") +
facet_grid(~country, scales = "free_x", space = "free_x", labeller = labeller(country = country.labs)) +
theme_classic() +
theme(axis.text.x = element_text(angle=55, hjust=1, size = 10),
axis.title.x = element_blank()) +
ylab("Merged relative abundance (%)") + xlab("") +
scale_fill_manual(values=mycolors) + geom_bar(stat="identity") +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.5, keyheight = 1.5, title = "Genus"))
metaxa.p14
metaxa.p14
nb.cols <- 15
mycolors <- colorRampPalette(brewer.pal(12, "Spectral"))(nb.cols)
# Facet labs
country.labs <- c("1" = "Benin", "2" = "Burkina Faso", "3" = "Finland")
# Plot
metaxa.p14 <- plot_bar(metaxa_mrg_loc_trans, fill = "Genus", title = "15 most abundant genera, Metaxa2") +
facet_grid(~country, scales = "free_x", space = "free_x", labeller = labeller(country = country.labs)) +
theme_classic() +
theme(axis.text.x = element_text(angle=55, hjust=1, size = 10),
axis.title.x = element_blank()) +
ylab("Merged relative abundance (%)") + xlab("") +
scale_fill_manual(values=mycolors) + geom_bar(stat="identity") +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.5, keyheight = 1.5, title = "Genus"))
metaxa.p14
nb.cols <- 15
mycolors <- colorRampPalette(brewer.pal(11, "Spectral"))(nb.cols)
# Facet labs
country.labs <- c("1" = "Benin", "2" = "Burkina Faso", "3" = "Finland")
# Plot
metaxa.p14 <- plot_bar(metaxa_mrg_loc_trans, fill = "Genus", title = "15 most abundant genera, Metaxa2") +
facet_grid(~country, scales = "free_x", space = "free_x", labeller = labeller(country = country.labs)) +
theme_classic() +
theme(axis.text.x = element_text(angle=55, hjust=1, size = 10),
axis.title.x = element_blank()) +
ylab("Merged relative abundance (%)") + xlab("") +
scale_fill_manual(values=mycolors) + geom_bar(stat="identity") +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.5, keyheight = 1.5, title = "Genus"))
metaxa.p14
metaxa.p14
metaphlan_PHY_genus <- tax_glom(metaphlan_PHY_clean, "Genus")
metaphlan_PHY_genus_abun <- prune_taxa(names(sort(taxa_sums(metaphlan_PHY_genus), TRUE)[1:15]),
metaphlan_PHY_genus)
# Transform_1
metaphlan_PHY_genus_abun_trans <- transform_sample_counts(metaphlan_PHY_genus_abun, function(x) x / sum(x))
# Merge by location
metaphlan_mrg_loc <- merge_samples(metaphlan_PHY_genus_abun_trans, "location")
# Transform_2
metaphlan_mrg_loc_trans <- transform_sample_counts(metaphlan_mrg_loc, function(x) x / sum(x))
# Normalize by sample number / location
otu_table(metaphlan_mrg_loc_trans) <- otu_table(metaphlan_mrg_loc_trans)[, ]/as.matrix(table(sample_data(metaphlan_PHY)$location))[,
1]
# Set colors
nb.cols <- 15
mycolors <- colorRampPalette(brewer.pal(11, "Spectral"))(nb.cols)
# Facet labs
country.labs <- c("1" = "Benin", "2" = "Burkina Faso", "3" = "Finland")
# Plot
metaphlan.p16 <- plot_bar(metaphlan_mrg_loc_trans, fill = "Genus", title = "15 most abundant genera, Metaphlan3") +
facet_grid(~country, scales = "free_x", space = "free_x", labeller = labeller(country = country.labs)) +
theme_classic() +
theme(axis.text.x = element_text(angle=55, hjust=1, size = 10),
axis.title.x = element_blank()) +
ylab("Relative abundance (%)") + xlab("") +
scale_fill_manual(values=mycolors) + geom_bar(stat="identity") +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.5, keyheight = 1.5, title = "Genus"))
# Plot both
metaxa.p14
metaphlan.p16
metaxa.p14
metaphlan.p16
metaphlan.p16
heat.metaphlan <- plot_taxa_heatmap(metaphlan_PHY_genus,
subset.top = 50,
VariableA = "country",
heatcolors = rev(brewer.pal(12, "GnBu")),
transformation = "log10",
cluster_cols = T)
heat.metaphlan
heat.metaphlan
metaphlan.p16
metaphlan.p16
heat.metaphlan
heat.metaphlan
# Let's use again the unfiltered data
metaphlan_PHY_genus <- tax_glom(metaphlan_PHY, "Genus")
heat.metaphlan <- plot_taxa_heatmap(metaphlan_PHY_genus,
subset.top = 50,
VariableA = "country",
heatcolors = rev(brewer.pal(12, "GnBu")),
transformation = "log10",
cluster_cols = T)
heat.metaphlan
heat.metaphlan
# Average 16S counts by location
mean16S_counts <- mean(metadata$SSU_counts, invert = TRUE)
lo_data <- data.frame(SUM = round(mean16S_counts * (sample_sums(otu_table(resfinder_PHY_clean)))),
location = sample_data(resfinder_PHY_clean)$location)
plot(lo_data$SUM~lo_data$location, cex.axis=0.5, srt=45, las=2, xlab=NULL)
# Testing models to support the data
## Linear
model.ln<-lm(SUM~location, data=lo_data)
summary(model.ln)
shapiro.test(lo_data$SUM)
plot(model.ln)
# The p value is > 0.05 and differs significantly from normal distribution
## Log
model.logln<-lm(log(SUM)~location, data=lo_data)
summary(model.logln)
shapiro.test(log(lo_data$SUM))
plot(model.logln)
# The p value is > 0.05 and differs significantly from normal distribution
## Poisson
model.pois = glm(SUM ~ location , data = lo_data, family = poisson)
summary(model.pois)
plot(model.pois)
## Quasipoisson
model.qpois<-glm(SUM~location, data=lo_data, family="quasipoisson")
summary(model.qpois)
plot(model.qpois)
## Negative binomial
model.nb <- glm.nb(SUM~location, data=lo_data)
summary(model.nb)
plot(model.nb)
# Summarize and compare models
data.frame(linear=coef(model.ln),
loglinear=exp(coef(model.logln)),
poisson=exp(coef(model.pois)),
qpoisson=exp(coef(model.qpois)),
negbin=exp(coef(model.nb)))
# Critical value
qchisq(0.95, df.residual(model.pois))
deviance(model.ln)
deviance(model.logln)
deviance(model.pois)
deviance(model.qpois)
deviance(model.nb)
# None of the models fits the data. But negative binominal gets the closest.
qchisq(0.95, df.residual(model.nb))
deviance(model.ln)
deviance(model.logln)
deviance(model.pois)
deviance(model.qpois)
deviance(model.nb)
# Plot using neg. binom. model
fit <- glm.nb(SUM ~ location, data = lo_data, link = log)
lo_data <- cbind(lo_data, Mean = predict(fit, newdata = lo_data, type = "response"), SE = predict(fit, newdata = lo_data, type = "response", se.fit = T)$se.fit)
nb.cols <- 14
mycolors <- colorRampPalette(brewer.pal(8, "Dark2"))(nb.cols)
ARG.sum.lo <- ggplot(lo_data, aes(x = location, y = Mean)) +
scale_fill_manual(values = mycolors) +
geom_line() + geom_jitter(data = lo_data, aes(x = location, y = SUM, color = location),
size = 2.3, alpha = 0.5, width = 0.3) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.6, lwd = 0.6) +
geom_point(size = 0.9) +
theme_classic() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(y = "Sum abundance/16S",
x = "") + guides(color = FALSE, alpha = FALSE) + labs(title = "ARGs") +
scale_y_continuous(trans = "log10")
ARG.sum.lo
nb.cols <- 14
mycolors <- colorRampPalette(brewer.pal(11, "Sprectal"))(nb.cols)
nb.cols <- 14
mycolors <- colorRampPalette(brewer.pal(11, "Spectral"))(nb.cols)
ARG.sum.lo <- ggplot(lo_data, aes(x = location, y = Mean)) +
scale_fill_manual(values = mycolors) +
geom_line() + geom_jitter(data = lo_data, aes(x = location, y = SUM, color = location),
size = 2.3, alpha = 0.5, width = 0.3) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.6, lwd = 0.6) +
geom_point(size = 0.9) +
theme_classic() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(y = "Sum abundance/16S",
x = "") + guides(color = FALSE, alpha = FALSE) + labs(title = "ARGs") +
scale_y_continuous(trans = "log10")
ARG.sum.lo
nb.cols <- 14
mycolors <- colorRampPalette(brewer.pal(11, "Spectral"))(nb.cols)
ARG.sum.lo <- ggplot(lo_data, aes(x = location, y = Mean)) +
geom_line() + geom_jitter(data = lo_data, aes(x = location, y = SUM, color = location),
size = 2.3, alpha = 0.5, width = 0.3) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.6, lwd = 0.6) +
geom_point(size = 0.9) +
scale_fill_manual(values = mycolors) +
theme_classic() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(y = "Sum abundance/16S",
x = "") + guides(color = FALSE, alpha = FALSE) + labs(title = "ARGs") +
scale_y_continuous(trans = "log10")
ARG.sum.lo
lo_data <- data.frame(SUM = round(mean16S_counts * (sample_sums(otu_table(resfinder_PHY_clean)))),
location = sample_data(resfinder_PHY)$location)
lo_data <- data.frame(SUM = round(mean16S_counts * (sample_sums(otu_table(resfinder_PHY_clean)))),
location = sample_data(resfinder_PHY_clean)$location)
# When outliers removed use:
#lo_data[which(lo_data$SUM %in% outliers),]
#lo_data <- lo_data[-which(lo_data$SUM %in% outliers),]
fit <- glm.nb(SUM ~ location, data = lo_data, link = log)
# Tukey's post hoc test
glht.mod <- glht(fit, mcp(location = "Tukey"))
print(summary(glht(glht.mod)))
# Average 16S counts bu location
mean16S_counts <- mean(metadata$SSU_counts, invert = TRUE)
co_data <- data.frame(SUM = round(mean16S_counts * (sample_sums(otu_table(resfinder_PHY_clean)))),
country = sample_data(resfinder_PHY_clean)$country)
plot(co_data$SUM~co_data$country, cex.axis=0.5, srt=45, las=2, xlab=NULL)
# Testing models to support the data
## Linear
model.ln<-lm(SUM~country, data=co_data)
summary(model.ln)
shapiro.test(lo_data$SUM)
plot(model.ln)
# The p value is > 0.05 and differs significantly from normal distribution
## Log
model.logln<-lm(log(SUM)~country, data=co_data)
summary(model.logln)
shapiro.test(log(co_data$SUM))
plot(model.logln)
# Data is not normally distributed.
## Poisson
model.pois = glm(SUM~country , data = co_data, family = poisson)
summary(model.pois)
plot(model.pois)
## Quasipoisson
model.qpois<-glm(SUM~country, data=co_data, family="quasipoisson")
summary(model.qpois)
plot(model.qpois)
## Negative binomial
model.nb <- glm.nb(SUM~country, data=co_data)
summary(model.nb)
plot(model.nb)
1/model.nb$theta
-2*(logLik(model.pois)-logLik(model.nb))
# Summarize models
data.frame(linear=coef(model.ln),
loglinear=exp(coef(model.logln)),
poisson=exp(coef(model.pois)),
qpoisson=exp(coef(model.qpois)),
negbin=exp(coef(model.nb)))
# Critical value
qchisq(0.95, df.residual(model.nb))
deviance(model.ln)
deviance(model.logln)
deviance(model.pois)
deviance(model.qpois)
deviance(model.nb)
# None of the models fits the data. But negative binominal gets the closest.
# Plot using neg. binom. model
co_data <- data.frame(SUM = round(mean16S_counts * (sample_sums(otu_table(resfinder_PHY_clean)))),
country = sample_data(resfinder_PHY_clean)$country)
fit <- glm.nb(SUM ~ country, data = co_data, link = log)
co_data <- cbind(co_data, Mean = predict(fit, newdata = co_data, type = "response"), SE = predict(fit, newdata = co_data, type = "response", se.fit = T)$se.fit)
ARG.sum.co <- ggplot(co_data, aes(x = country, y = Mean)) +
scale_color_manual(values=c("#FF333F", "#35E0F5", "#531592")) +
geom_line() + geom_jitter(data = co_data, aes(x = country, y = SUM, color = country),
size = 2.3, alpha = 0.5, width = 0.3) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.6, lwd = 0.6) +
geom_point(size = 0.9) +
theme_classic() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(y = "Sum abundance/16S",
x = "") + guides(color = FALSE, alpha = FALSE) + labs(title = "ARGs") + scale_y_log10()
ARG.sum.co
co_data <- data.frame(SUM = round(mean16S_counts * (sample_sums(otu_table(resfinder_PHY_clean)))),
country = sample_data(resfinder_PHY_clean)$country)
# Exclude outliers
#co_data[which(co_data$SUM %in% outliers),]
#co_data <- co_data[-which(co_data$SUM %in% outliers),]
fit <- glm.nb(SUM ~ country, data = co_data, link = log)
# Tukey's post hoc test
glht.mod <- glht(fit, mcp(country = "Tukey"))
summary(glht(glht.mod))
ARG.sum.lo
View(metadata)
resfinder_PHY_Class <- tax_glom(resfinder_PHY_clean, taxrank = "Class")
# All classes
resfinder_PHY_Class_abund <- prune_taxa(names(sort(taxa_sums(resfinder_PHY_Class), TRUE)),
resfinder_PHY_Class)
otu_table(resfinder_PHY_Class_abund) <-   (otu_table(resfinder_PHY_Class_abund)[,]/as.matrix(table(sample_data(resfinder_PHY_Class_abund)$location))[, 1])
p17<-plot_bar(resfinder_PHY_Class_abund, x="location", fill="Class")
resfinder.p17 <- p17 + facet_grid(~ country, scales = "free") +
ggtitle("Sum of relative abundances of ARGs by classes/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 12),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 12), keywidth = 1.5, keyheight = 1.5))
# Remove OTU separators
resfinder.p17 + geom_bar(aes(color=Class, fill=Class), stat="identity", position="stack", size = 0.5)
resfinder.p17 + geom_bar(aes(color=Class, fill=Class), stat="identity", position="stack", size = 0.5)
plot_bar(resfinder_PHY_clean, fill = "Class")
plot_bar(resfinder_PHY_clean, fill = "Class")
View(resfinder_PHY_Class_abund)
otu_table(resfinder_PHY_Class_abund)
sample_sums(otu_table(resfinder_PHY_Class_abund))
sums <- sample_sums(otu_table(resfinder_PHY_Class_abund))
View(sums)
pwd
resfinder.p17 + geom_bar(aes(color=Class, fill=Class), stat="identity", position="stack", size = 0.5)
resfinder_PHY_Class_abund <- prune_taxa(names(sort(taxa_sums(resfinder_PHY_Class), TRUE)),
resfinder_PHY_Class)
# Normalize by number of samples in each country
otu_table(resfinder_PHY_Class_abund) <-   (otu_table(resfinder_PHY_Class_abund)[,]/as.matrix(table(sample_data(resfinder_PHY_Class_abund)$country))[, 1])
p17<-plot_bar(resfinder_PHY_Class_abund, x="name", fill="Class")
resfinder.p17 <- p17 + facet_grid(~ location, scales = "free") +
ggtitle("Sum relative abundance of ARGs by classes/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 10),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 10), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p17 + geom_bar(aes(color=Class, fill=Class), stat="identity", position="stack", size = 0.5)
resfinder.p17 + geom_bar(aes(color=Class, fill=Class), stat="identity", position="stack", size = 0.5)
p17<-plot_bar(resfinder_PHY_Class_abund, x="name", fill="Class")
resfinder.p17 <- p17 + facet_grid(~ location, scales = "free", space = "free") +
ggtitle("Sum relative abundance of ARGs by classes/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 10),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 10), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p17 + geom_bar(aes(color=Class, fill=Class), position="stack", size = 0.5)
resfinder.p17 + geom_bar(aes(color=Class, fill=Class), stat="identity", position="stack", size = 0.5)
resfinder.p17 + geom_bar(aes(color=Class, fill=Class), stat="identity", position="stack", size = 0.5)
p17<-plot_bar(resfinder_PHY_Class_abund, x="name", fill="Class")
p17<-plot_bar(resfinder_PHY_Class_abund, x="name", fill="Class")
resfinder.p17 <- p17 + facet_grid(location ~ ., scales = "free", space = "free") +
ggtitle("Sum relative abundance of ARGs by classes/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 10),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 10), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p17 + geom_bar(aes(color=Class, fill=Class), stat="identity", position="stack", size = 0.5)
resfinder.p17 + geom_bar(aes(color=Class, fill=Class), stat="identity", position="stack", size = 0.5)
p17<-plot_bar(resfinder_PHY_Class_abund, x="name", fill="Class")
resfinder.p17 <- p17 + facet_wrap(~ location, scales = "free", space = "free") +
ggtitle("Sum relative abundance of ARGs by classes/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 10),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 10), keywidth = 1.2, keyheight = 1.2))
p17<-plot_bar(resfinder_PHY_Class_abund, x="name", fill="Class")
resfinder.p17 <- p17 + facet_wrap(~ location, scales = "free") +
ggtitle("Sum relative abundance of ARGs by classes/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 10),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 10), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p17 + geom_bar(aes(color=Class, fill=Class), stat="identity", position="stack", size = 0.5)
resfinder.p17 + geom_bar(aes(color=Class, fill=Class), stat="identity", position="stack", size = 0.5)
resfinder.p17 + geom_bar(aes(color=Class, fill=Class), width=0.9, stat="identity", position="stack", size = 0.5)
resfinder.p17 + geom_bar(aes(color=Class, fill=Class), width=0.9, stat="identity", position="stack", size = 0.5)
p17<-plot_bar(resfinder_PHY_Class_abund, x="name", fill="Class")
resfinder.p17 <- p17 + facet_wrap(~ location, scales = "free") +
ggtitle("Sum relative abundance of ARGs by classes/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p17 + geom_bar(aes(color=Class, fill=Class), width = 0.5, stat="identity", position="stack")
resfinder.p17 + geom_bar(aes(color=Class, fill=Class), width = 0.5, stat="identity", position="stack")
p17<-plot_bar(resfinder_PHY_Class_abund, x="name", fill="Class")
resfinder.p17 <- p17 + facet_grid(~ location, scales = "free", space = "free") +
ggtitle("Sum relative abundance of ARGs by classes/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p17 + geom_bar(aes(color=Class, fill=Class), stat="identity", position="stack")
resfinder.p17 + geom_bar(aes(color=Class, fill=Class), stat="identity", position="stack")
resfinder_PHY_betalactams = subset_taxa(resfinder_PHY_clean, Class=="Betalactam")
resfinder_PHY_betalactams_Gene <- tax_glom(resfinder_PHY_betalactams, "Gene")
# Top12
resfinder_PHY_betalactams_Gene_abund <- prune_taxa(names(sort(taxa_sums(resfinder_PHY_betalactams_Gene), TRUE)[1:12]),
resfinder_PHY_betalactams_Gene)
# Normalize by sample number in each country
otu_table(resfinder_PHY_betalactams_Gene_abund) <- (otu_table(resfinder_PHY_betalactams_Gene_abund)[, ]/as.matrix(table(sample_data(resfinder_PHY_betalactams_Gene_abund)$country))[,
1])
p19<-plot_bar(resfinder_PHY_betalactams_Gene_abund, x="name", fill="Gene")
resfinder.p19 <- p19 + facet_grid(~ location, scales = "free", space = "free") +
ggtitle("Sum of relative abundances of top 12 betalactams/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p19 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
resfinder.p19 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
View(metadata)
resfinder_PHY_Gene <- tax_glom(resfinder_PHY_clean, taxrank = "Gene")
resfinder_PHY_Gene_abund <- prune_taxa(names(sort(taxa_sums(resfinder_PHY_Gene), TRUE)[1:12]),
resfinder_PHY_Gene)
# Normalize by number of samples in each country
otu_table(resfinder_PHY_Gene_abund) <-   (otu_table(resfinder_PHY_Gene_abund)[,]/as.matrix(table(sample_data(resfinder_PHY_Gene_abund)$country))[, 1])
p18<-plot_bar(resfinder_PHY_Gene_abund, x="name", fill="Gene")
resfinder.p18 <- p18 + facet_grid(~ country, scales = "free", space = "free") +
ggtitle("Sum relative abundances of ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p18 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
p18<-plot_bar(resfinder_PHY_Gene_abund, x="name", fill="Gene")
resfinder.p18 <- p18 + facet_grid(~ location, scales = "free", space = "free") +
ggtitle("Sum relative abundances of ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p18 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
# Shannon
p4 <- ggviolin(metaxa.meta, x = "country", y = "diversity_shannon",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"))
p4 <- p4 + stat_compare_means(comparisons = country.pairs, method = "wilcox.test")
print(p4)
# Gini Simpson
p5 <- ggviolin(metaxa.meta, x = "country", y = "diversity_gini_simpson",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"))
p5 <- p5 + stat_compare_means(comparisons = country.pairs, method = "wilcox.test")
print(p5)
# Inverse Simpson
p6 <- ggviolin(metaxa.meta, x = "country", y = "diversity_inverse_simpson",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"))
p6 <- p6 + stat_compare_means(comparisons = country.pairs, method = "t.test")
print(p6)
# In Finnish samples seems to have significantly lower alpha diversity in taxonomy according to Metaxa2 compared to Benin and Burkina Faso.
