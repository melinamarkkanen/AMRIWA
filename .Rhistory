metadata <-read.table("metadata.txt", sep="\t", header = T, row.names = 1, fill = 1)
# Load data
metaxa_genus <- read.delim("~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/metaxa_genus.txt")
# Create OTU table
OTU_metaxa <- metaxa_genus[,-1]
# Create tax table
tax_table_metaxa <- data.frame(str_split_fixed(data.frame(metaxa_genus) [,1], ";", 6))
colnames(tax_table_metaxa) <- c("Domain", "Phylum", "Class", "Order", "Family", "Genus")
# Combine into phyloseq object
metaxa_PHY <- phyloseq(otu_table(OTU_metaxa, taxa_are_rows=TRUE),
tax_table(as.matrix(tax_table_metaxa)), sample_data(metadata))
# Exclude Unknown
metaxa_PHY <- subset_taxa(metaxa_PHY, !Domain %in% c("Unknown"))
metadata$SSU_counts <- sample_sums(metaxa_PHY)
# Create extra column for Eucaryota, might be interesting to check out later
metaxa_PHY_temp <- subset_taxa(metaxa_PHY, !Domain %in% c("Unknown", "Bacteria", "Archaea", "Mitochondria", "Chloroplast"))
metadata$SSU_eucaryota <- sample_sums(metaxa_PHY_temp)
View(metadata)
metadata <-read.table("metadata.txt", sep="\t", header = T, row.names = 1, fill = 1)
# Load data
metaxa_genus <- read.delim("~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/metaxa_genus.txt")
# Create OTU table
OTU_metaxa <- metaxa_genus[,-1]
# Create tax table
tax_table_metaxa <- data.frame(str_split_fixed(data.frame(metaxa_genus) [,1], ";", 6))
colnames(tax_table_metaxa) <- c("Domain", "Phylum", "Class", "Order", "Family", "Genus")
# Combine into phyloseq object
metaxa_PHY <- phyloseq(otu_table(OTU_metaxa, taxa_are_rows=TRUE),
tax_table(as.matrix(tax_table_metaxa)), sample_data(metadata))
# Exclude Unknown
metaxa_PHY <- subset_taxa(metaxa_PHY, !Domain %in% c("Unknown"))
metadata$SSU_counts <- sample_sums(metaxa_PHY)
# Create extra column for Eucaryota, might be interesting to check out later
metaxa_PHY_temp <- subset_taxa(metaxa_PHY, !Domain %in% c("Unknown", "Bacteria", "Archaea", "Mitochondria", "Chloroplast"))
metadata$SSU_eucaryota <- sample_sums(metaxa_PHY_temp)
View(metaxa_PHY)
metadata$SSU_counts <- sample_sums(metaxa_PHY)
# Create extra column for Eucaryota, might be interesting to check out later
metaxa_PHY_temp <- subset_taxa(metaxa_PHY, !Domain %in% c("Unknown", "Bacteria", "Archaea", "Mitochondria", "Chloroplast"))
metadata$SSU_eucaryota <- sample_sums(metaxa_PHY_temp)
# With low quality (BFH24_S142, BH63_S118, FH10_S171), do at least this.
metaxa_PHY = subset_samples(metaxa_PHY, name != "BFH24_S142" & name != "BH63_S118" & name != "FH10_S171")
# Feces samples (BH20_S88, BH22_S89, BH24_S90, BH25_S91)
#metaxa_PHY_ww = subset_samples(metaxa_PHY, name!="BH20_S88" & name!="BH22_S89" & name!="BH24_S90" & name!="BH25_S91")
# Or alternatively include fecal but exclude suspicious samples
# metaxa_PHY_ast = subset_samples(metaxa_PHY, "BH02_S77" & name != "BH27_S92" & name != "BH30_S94")
# Suspicious samples (very high ARG level)
#metaxa_PHY_clean = subset_samples(metaxa_PHY_ww, name != "BH02_S77" & name != "BH27_S92" & name != "BH30_S94")
# Clear taxa that are not present in any of the remaining samples
any(taxa_sums(metaxa_PHY) == 0)
metaxa_PHY <- prune_taxa(taxa_sums(metaxa_PHY) > 0, metaxa_PHY)
any(taxa_sums(metaxa_PHY) == 0)
# Change into relative data
metaxa_rel_PHY <- transform_sample_counts(metaxa_PHY, function(x) x/sum(x))
# Ordinate and plot data
metaxa_rel_PHY_ord <- ordinate(metaxa_rel_PHY, method = "PCoA", distance = "horn")
p1 <- plot_ordination(metaxa_rel_PHY, metaxa_rel_PHY_ord, color = "country", label = "name")
metaxa.p1 <- p1 + scale_color_manual(values=c("#FF333F", "#35E0F5", "#531592")) + geom_point(colour = "black",
pch = 21, size = 2, alpha = 0.5) + stat_ellipse(level = 0.95, linetype = 1) +
theme_minimal() + labs(title = "Metaxa2")
metaxa.p1
# Test significance using pair-wise adonis
metaxa_temp <- subset_samples(metaxa_PHY, (country == "Benin" | country == "Finland"))
metaxa_dist <- vegdist(t(otu_table(metaxa_temp)), dist = "horn")
adonis(metaxa_dist ~ country, data = data.frame(sample_data(metaxa_temp), permutations = 9999))
metaxa_temp <- subset_samples(metaxa_PHY, (country == "Burkina Faso" | country == "Finland"))
metaxa_dist <- vegdist(t(otu_table(metaxa_temp)), dist = "horn")
adonis(metaxa_dist ~ country, data = data.frame(sample_data(metaxa_temp), permutations = 9999))
metaxa_temp <- subset_samples(metaxa_PHY, (country == "Benin" | country == "Burkina Faso"))
metaxa_dist <- vegdist(t(otu_table(metaxa_temp)), dist = "horn")
adonis(metaxa_dist ~ country, data = data.frame(sample_data(metaxa_temp), permutations = 9999))
# Finnish samples seems to harbour more distinct taxonomic dibversity than those of Benin (R2=16.7%, p=0.001) and Burkina Faso (R2=9.5 %, p=0.001). Instead There is little grouping by country between Benin and Burkina Faso.
metaxa_temp <- subset_samples(metaxa_PHY, (country == "Benin" | country == "Finland"))
metaxa_dist <- vegdist(t(otu_table(metaxa_temp)), dist = "horn")
adonis(metaxa_dist ~ country, data = data.frame(sample_data(metaxa_temp), permutations = 9999))
metaxa_temp <- subset_samples(metaxa_PHY, (country == "Burkina Faso" | country == "Finland"))
metaxa_dist <- vegdist(t(otu_table(metaxa_temp)), dist = "horn")
adonis(metaxa_dist ~ country, data = data.frame(sample_data(metaxa_temp), permutations = 9999))
metaxa_temp <- subset_samples(metaxa_PHY, (country == "Benin" | country == "Burkina Faso"))
metaxa_dist <- vegdist(t(otu_table(metaxa_temp)), dist = "horn")
adonis(metaxa_dist ~ country, data = data.frame(sample_data(metaxa_temp), permutations = 9999))
Benin <- subset_samples(metaxa_PHY, (country == "Benin"))
Benin_dist <- vegdist(t(otu_table(Benin)), dist = "horn")
adonis(Benin_dist ~ location, data = data.frame(sample_data(Benin)), permutations = 99999)
BF <- subset_samples(metaxa_PHY, (country == "Burkina Faso"))
BF_dist <- vegdist(t(otu_table(BF)), dist = "horn")
adonis(BF_dist ~ location, data = data.frame(sample_data(BF)), permutations = 99999)
Finland <- subset_samples(metaxa_PHY, (country == "Finland"))
Finland_dist <- vegdist(t(otu_table(Finland)), dist = "horn")
adonis(Finland_dist ~ location, data = data.frame(sample_data(Finland)), permutations = 99999)
# In Benin the location defines the taxonomic composition at some level (R2=21.6 %, p=1e-05), as well as in Burkina Faso (R2=24.3 %, p=1e-05). In Finland grouping by location is not significant (due to small sample size).
# Modify data in command-line to match sample names in metadata file
## tr '|' ';' <merged_abundance_table.txt > mod_merged_abundance_table.txt
## sed -i 's/_profile//g' mod_merged_abundance_table.txt
## sed -i 's/BFH38-A_S156/BFH38.A_S156/g' mod_merged_abundance_table.txt
## sed -i 's/BFH38-B_S157/BFH38.B_S157/g' mod_merged_abundance_table.txt
## sed -i 's/BH34-A_S98/BH34.A_S98/g' mod_merged_abundance_table.txt
## sed -i 's/BH34-B_S99/BH34.B_S99/g' mod_merged_abundance_table.txt
# Load data
metaphlan <- as.matrix(read.table("mod_merged_abundance_table.txt", fill = 1, header = T, check.names = F))
# Exclude the first column "NCBI_tax_id"
metaphlan <- subset(metaphlan, select = -c(NCBI_tax_id))
# Create OTU table
OTU_metaphlan <- metaphlan[,-1]
# Change values as numeric
class(OTU_metaphlan) <- "numeric"
# Create tax_table
tax_table_metaphlan <- data.frame(str_split_fixed(data.frame(metaphlan) [,1], ";", 7))
colnames(tax_table_metaphlan) <- c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")
# Clean "*__"
tax_table_metaphlan <- apply(tax_table_metaphlan, 2, function(y) (gsub(".__", "", y)))
# Combine into phyloseq object
metaphlan_PHY <- phyloseq(otu_table(OTU_metaphlan, taxa_are_rows = TRUE), tax_table(as.matrix(tax_table_metaphlan)), sample_data(metadata))
# Virus
metaphlan_PHY <- subset_taxa(metaphlan_PHY, Kingdom != "Virus")
# With low quality (BFH24_S142, BH63_S118, FH10_S171)
metaphlan_PHY = subset_samples(metaphlan_PHY, name != "BFH24_S142" & name != "BH63_S118" & name != "FH10_S171")
# Feces samples (BH20_S88, BH22_S89, BH24_S90, BH25_S91)
#metaphlan_PHY_ww = subset_samples(metaphlan_PHY, name!="BH20_S88" & name!="BH22_S89" & name!="BH24_S90" & name!="BH25_S91")
# Or alternatively include fecal but exclude suspicious samples
# metaphlan_PHY_ast = subset_samples(metaphlan_PHY, "BH02_S77" & name != "BH27_S92" & name != "BH30_S94")
# Suspicious samples (very high ARG level)
#metaphlan_PHY_clean = subset_samples(metaphlan_PHY_ww, name != "BH02_S77" & name != "BH27_S92" & name != "BH30_S94")
# Clear taxa that is not present in any of the remaining samples
any(taxa_sums(metaphlan_PHY) == 0)
metaphlan_PHY <- prune_taxa(taxa_sums(metaphlan_PHY) > 0, metaphlan_PHY)
any(taxa_sums(metaphlan_PHY) == 0)
# Ordinate and plot data
metaphlan_PHY_ord <- ordinate(metaphlan_PHY, method = "PCoA", distance = "horn")
p2 <- plot_ordination(metaphlan_PHY, metaphlan_PHY_ord, color = "country", label = "sample_type")
metaphlan.p2 <- p2 + scale_color_manual(values=c("#FF333F", "#35E0F5", "#531592")) +
geom_point(colour = "black", pch = 21, size = 2, alpha = 0.5) + stat_ellipse(level = 0.95, linetype = 1) +
theme_minimal() + labs(title = "Metaphlan3")
metaphlan.p2
# Test significance using pair-wise adonis
metaphlan_temp <- subset_samples(metaphlan_PHY, (country == "Benin" | country == "Finland"))
metaphlan_dist <- vegdist(t(otu_table(metaphlan_temp)), dist = "horn")
adonis(metaphlan_dist ~ country, data = data.frame(sample_data(metaphlan_temp), permutations = 9999))
metaphlan_temp <- subset_samples(metaphlan_PHY, (country == "Burkina Faso" | country == "Finland"))
metaphlan_dist <- vegdist(t(otu_table(metaphlan_temp)), dist = "horn")
adonis(metaphlan_dist ~ country, data = data.frame(sample_data(metaphlan_temp), permutations = 9999))
metaphlan_temp <- subset_samples(metaphlan_PHY, (country == "Burkina Faso" | country == "Benin"))
metaphlan_dist <- vegdist(t(otu_table(metaphlan_temp)), dist = "horn")
adonis(metaphlan_dist ~ country, data = data.frame(sample_data(metaphlan_temp), permutations = 9999))
# The explanatory variable "country" explains less than 10 % of the grouping in every pair-wise comparison.
# There seems to be a small group of samples differing from other ones. They represent mostly other than ww samples. Let's see if this grouping is significant.
metaphlan_temp <- subset_samples(metaphlan_PHY_clean, (sample_type == "waste water" | sample_type == "soil"))
# Ordinate and plot data
metaphlan_PHY_ord <- ordinate(metaphlan_PHY, method = "PCoA", distance = "horn")
p2 <- plot_ordination(metaphlan_PHY, metaphlan_PHY_ord, color = "country", label = "sample_type")
metaphlan.p2 <- p2 + scale_color_manual(values=c("#FF333F", "#35E0F5", "#531592")) +
geom_point(colour = "black", pch = 21, size = 2, alpha = 0.5) + stat_ellipse(level = 0.95, linetype = 1) +
theme_minimal() + labs(title = "Metaphlan3")
metaphlan.p2
# Test significance using pair-wise adonis
metaphlan_temp <- subset_samples(metaphlan_PHY, (country == "Benin" | country == "Finland"))
metaphlan_dist <- vegdist(t(otu_table(metaphlan_temp)), dist = "horn")
adonis(metaphlan_dist ~ country, data = data.frame(sample_data(metaphlan_temp), permutations = 9999))
metaphlan_temp <- subset_samples(metaphlan_PHY, (country == "Burkina Faso" | country == "Finland"))
metaphlan_dist <- vegdist(t(otu_table(metaphlan_temp)), dist = "horn")
adonis(metaphlan_dist ~ country, data = data.frame(sample_data(metaphlan_temp), permutations = 9999))
metaphlan_temp <- subset_samples(metaphlan_PHY, (country == "Burkina Faso" | country == "Benin"))
metaphlan_dist <- vegdist(t(otu_table(metaphlan_temp)), dist = "horn")
adonis(metaphlan_dist ~ country, data = data.frame(sample_data(metaphlan_temp), permutations = 9999))
# The explanatory variable "country" explains less than 10 % of the grouping in every pair-wise comparison.
# There seems to be a small group of samples differing from other ones. They represent mostly other than ww samples. Let's see if this grouping is significant.
metaphlan_temp <- subset_samples(metaphlan_PHY, (sample_type == "waste water" | sample_type == "soil"))
metaphlan_dist <- vegdist(t(otu_table(metaphlan_temp)), dist = "horn")
adonis(metaphlan_dist ~ sample_type, data = data.frame(sample_data(metaphlan_temp), permutations = 9999))
metaphlan_temp <- subset_samples(metaphlan_PHY, (sample_type == "waste water" | sample_type == "river water"))
metaphlan_dist <- vegdist(t(otu_table(metaphlan_temp)), dist = "horn")
adonis(metaphlan_dist ~ sample_type, data = data.frame(sample_data(metaphlan_temp), permutations = 9999))
# Pair-wise comparison between ww samples and river water gives a significant (p=0.002) R2 value of 4.6 %.
Benin <- subset_samples(metaphlan_PHY, (country == "Benin"))
Benin_dist <- vegdist(t(otu_table(Benin)), dist = "horn")
adonis(Benin_dist ~ location, data = data.frame(sample_data(Benin)), permutations = 99999)
BF <- subset_samples(metaphlan_PHY, (country == "Burkina Faso"))
BF_dist <- vegdist(t(otu_table(BF)), dist = "horn")
adonis(BF_dist ~ location, data = data.frame(sample_data(BF)), permutations = 99999)
Finland <- subset_samples(metaphlan_PHY, (country == "Finland"))
Finland_dist <- vegdist(t(otu_table(Finland)), dist = "horn")
adonis(Finland_dist ~ location, data = data.frame(sample_data(Finland)), permutations = 99999)
# The results seem similar to those from Metaxa2. Benin R2=26.6 %, p=1e-05; BF R2=22.2 %, p=5e-05; Finland not significant.
# Modify mapping output file "ARG_genemat.txt" in command line to match sample names in metadata file
## sed 's/BFH38-A_S156/BFH38.A_S156/g' ARG_genemat.txt > mod_ARG_genemat.txt
## sed -i 's/BFH38-B_S157/BFH38.B_S157/g' mod_ARG_genemat.txt
## sed -i 's/BH34-A_S98/BH34.A_S98/g' mod_ARG_genemat.txt
## sed -i 's/BH34-B_S99/BH34.B_S99/g' mod_ARG_genemat.txt
ARG_genemat <-as.matrix(read.table("mod_ARG_genemat.txt", header= T, check.names = F, row.names = 1))
# Save counts without gene names
#write.table(ARG_genemat, "~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/ARG_genemat_counts", row.names=T, sep = "\t", col.names = T)
#ARG_genemat_counts <- read.delim("~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/ARG_genemat_counts", row.names=NULL)
#ARG_genemat_counts$row.names<-NULL
ARG_genemat_norm <- t(t(ARG_genemat)/metadata$SSU_counts)
# Check if correct:
identical(ARG_genemat[2020, 4]/metadata$SSU_counts[10], ARG_genemat_norm[2020, 4])
# Save and load again to exclude row.names
write.table(ARG_genemat_norm, "~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/ARG_genemat_norm.txt", row.names=T, sep = "\t", col.names = T)
ARG_genemat_norm <- read.delim("~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/ARG_genemat_norm.txt", row.names=NULL)
ARG_genemat_norm$row.names<-NULL
View(ARG_genemat_norm)
# Create tax table
tax_table_resfinder <- read.csv("~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/tax_table_resfinder.txt", header=FALSE, sep=";")
colnames(tax_table_resfinder) <- c("Gene", "Class")
# Combine to phyloseq object
resfinder_PHY <- phyloseq(otu_table(ARG_genemat_norm, taxa_are_rows = TRUE), sample_data(metadata),
tax_table(as.matrix(tax_table_resfinder)))
# Have a quick look
plot_bar(otu_table(resfinder_PHY))
# With low quality (BFH24_S142, BH63_S118, FH10_S171)
resfinder_PHY = subset_samples(resfinder_PHY, name != "BFH24_S142" & name != "BH63_S118" & name != "FH10_S171")
# Feces samples (BH20_S88, BH22_S89, BH24_S90, BH25_S91)
#resfinder_PHY_ww = subset_samples(resfinder_PHY, name!="BH20_S88" & name!="BH22_S89" & name!="BH24_S90" & name!="BH25_S91")
# Or alternatively include fecal but exclude suspicious samples
# resfinder_PHY_ast = subset_samples(resfinder_PHY, "BH02_S77" & name != "BH27_S92" & name != "BH30_S94")
# Suspicious samples (very high ARG level) (BH02_S77, BH27_S92, BH30_S94)
#resfinder_PHY_clean = subset_samples(resfinder_PHY_ww, name != "BH02_S77" & name != "BH27_S92" & name != "BH30_S94")
# Check if there are taxa that are not present in any of the remaining samples
any(taxa_sums(resfinder_PHY) == 0)
resfinder_PHY <- prune_taxa(taxa_sums(resfinder_PHY) > 0, resfinder_PHY)
any(taxa_sums(resfinder_PHY) == 0)
# Ordinate and plot data
resfinder_PHY_ord <- ordinate(resfinder_PHY, method = "PCoA", distance = "horn")
p3 <- plot_ordination(resfinder_PHY, resfinder_PHY_ord, color = "country", label = "name")
resfinder.p3 <- p3 + scale_color_manual(values=c("#FF333F", "#35E0F5", "#531592")) +
geom_point(colour = "black", pch = 21, size = 2, alpha = 0.5) + stat_ellipse(level = 0.95, linetype = 1) +
theme_minimal() + labs(title = "ResFinder")
resfinder.p3
# Test significance between all pairs
resfinder_temp <- subset_samples(resfinder_PHY, (country == "Finland" | country == "Benin"))
resfinder_dist <- vegdist(t(otu_table(resfinder_temp)), dist = "horn")
adonis(resfinder_dist ~ country, data = data.frame(sample_data(resfinder_temp), permutations = 9999))
resfinder_temp <- subset_samples(resfinder_PHY, (country == "Burkina Faso" | country == "Benin"))
resfinder_dist <- vegdist(t(otu_table(resfinder_temp)), dist = "horn")
adonis(resfinder_dist ~ country, data = data.frame(sample_data(resfinder_temp), permutations = 9999))
resfinder_temp <- subset_samples(resfinder_PHY, (country == "Finland" | country == "Burkina Faso"))
resfinder_dist <- vegdist(t(otu_table(resfinder_temp)), dist = "horn")
adonis(resfinder_dist ~ country, data = data.frame(sample_data(resfinder_temp), permutations = 9999))
# Between Benin and Finland, country explains 11.5 % (p=0.001) of the divergence in the resistome. Between BF and Finland the same is 12.6 % (p=0.001).
resfinder_temp <- subset_samples(resfinder_PHY, (country == "Finland" | country == "Benin"))
resfinder_dist <- vegdist(t(otu_table(resfinder_temp)), dist = "horn")
adonis(resfinder_dist ~ country, data = data.frame(sample_data(resfinder_temp), permutations = 9999))
resfinder_temp <- subset_samples(resfinder_PHY, (country == "Burkina Faso" | country == "Benin"))
resfinder_dist <- vegdist(t(otu_table(resfinder_temp)), dist = "horn")
adonis(resfinder_dist ~ country, data = data.frame(sample_data(resfinder_temp), permutations = 9999))
resfinder_temp <- subset_samples(resfinder_PHY, (country == "Finland" | country == "Burkina Faso"))
resfinder_dist <- vegdist(t(otu_table(resfinder_temp)), dist = "horn")
adonis(resfinder_dist ~ country, data = data.frame(sample_data(resfinder_temp), permutations = 9999))
Benin <- subset_samples(resfinder_PHY, (country == "Benin"))
Benin_dist <- vegdist(t(otu_table(Benin)), dist = "horn")
adonis(Benin_dist ~ location, data = data.frame(sample_data(Benin)), permutations = 99999)
BF <- subset_samples(resfinder_PHY, (country == "Burkina Faso"))
BF_dist <- vegdist(t(otu_table(BF)), dist = "horn")
adonis(BF_dist ~ location, data = data.frame(sample_data(BF)), permutations = 99999)
Finland <- subset_samples(resfinder_PHY, (country == "Finland"))
Finland_dist <- vegdist(t(otu_table(Finland)), dist = "horn")
adonis(Finland_dist ~ location, data = data.frame(sample_data(Finland)), permutations = 99999)
# In Benin and BF the grouping by location has R2 values like 26.5 % (p=3e-05) and 20.4 % (p=0.00203). In Finland no significant cirrelation can be proven.
# Take a look at the indexes (Can't work with the metaxa_rel_PHY, since it has "double" = non-integer data.)
metaxa_tab <-microbiome::alpha(metaxa_PHY, index = "all")
kable(head(metaxa_tab))
# Create data table
metaxa.meta <- meta(metaxa_PHY)
kable(head(metaxa.meta))
# Add indexes to data table
## Shannon
metaxa.meta$diversity_shannon <- metaxa_tab$diversity_shannon
## Gini Simpson
metaxa.meta$diversity_gini_simpson <- metaxa_tab$diversity_gini_simpson
## Inverse Simpson
metaxa.meta$diversity_inverse_simpson <- metaxa_tab$diversity_inverse_simpson
# Check whether the distribution of the diversity is normal
hist(metaxa.meta$diversity_shannon)
shapiro.test(metaxa.meta$diversity_shannon) # Does not fit the assumption of normal distribution > wilcox test.
qqnorm(metaxa.meta$diversity_shannon)
hist(metaxa.meta$diversity_gini_simpson)
shapiro.test(metaxa.meta$diversity_gini_simpson) # Does not fit the assumption of normal distribution > wilcox test.
qqnorm(metaxa.meta$diversity_gini_simpson)
hist(metaxa.meta$diversity_inverse_simpson)
shapiro.test(metaxa.meta$diversity_inverse_simpson)
qqnorm(metaxa.meta$diversity_inverse_simpson)
# Create a list of pairwise comparisons
div.country <- levels(metaxa.meta$country)
country.pairs <- combn(seq_along(div.country), 2, simplify = FALSE, FUN = function(i)div.country[i])
print(country.pairs)
# For inverse simpson index, data fullfills the assumption for normal distribution. For that t-test will be apllied. For the other too wilcox test will be used to test the significance.
# Shannon
p4 <- ggviolin(metaxa.meta, x = "country", y = "diversity_shannon",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"))
p4 <- p4 + stat_compare_means(comparisons = country.pairs, method = "wilcox.test")
print(p4)
# Gini Simpson
p5 <- ggviolin(metaxa.meta, x = "country", y = "diversity_gini_simpson",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"))
p5 <- p5 + stat_compare_means(comparisons = country.pairs, method = "wilcox.test")
print(p5)
# Inverse Simpson
p6 <- ggviolin(metaxa.meta, x = "country", y = "diversity_inverse_simpson",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"))
p6 <- p6 + stat_compare_means(comparisons = country.pairs, method = "t.test")
print(p6)
# In Finnish samples seems to have significantly lower alpha diversity in taxonomy according to Metaxa2 compared to Benin and Burkina Faso.
# Shannon
## Take a look at the indexes
resfinder_tab <-microbiome::alpha(resfinder_PHY, index = "diversity_shannon")
kable(head(resfinder_tab))
## Create data table
resfinder.meta <- meta(resfinder_PHY)
kable(head(resfinder.meta))
## Add indexes to data table
resfinder.meta$diversity_shannon <- resfinder_tab$diversity_shannon
# Check whether the distribution of the diversity is normal
hist(resfinder.meta$diversity_shannon)
shapiro.test(resfinder.meta$diversity_shannon) # Does not fit the assumption of normal distribution > wilcox test.
qqnorm(resfinder.meta$diversity_shannon)
# Create a list of pairwise comparisons
div.country <- levels(resfinder.meta$country)
country.pairs <- combn(seq_along(div.country), 2, simplify = FALSE, FUN = function(i)div.country[i])
print(country.pairs)
# Gini Simpson
## Take a look at the indexes
resfinder_tab <-microbiome::alpha(resfinder_PHY, index = "diversity_gini_simpson")
kable(head(resfinder_tab))
## Add indexes to data table
resfinder.meta$diversity_gini_simpson <- resfinder_tab$diversity_gini_simpson
# Check whether the distribution of the diversity is normal
hist(resfinder.meta$diversity_gini_simpson)
shapiro.test(resfinder.meta$diversity_gini_simpson) # Does not fit the assumption of normal distribution > wilcox test.
qqnorm(resfinder.meta$diversity_gini_simpson)
# Inverse Simpson
## Take a look at the indexes
resfinder_tab <-microbiome::alpha(resfinder_PHY, index = "diversity_inverse_simpson")
kable(head(resfinder_tab))
## Add indexes to data table
resfinder.meta$diversity_inverse_simpson <- resfinder_tab$diversity_inverse_simpson
# Check whether the distribution of the diversity is normal
hist(resfinder.meta$diversity_inverse_simpson)
shapiro.test(resfinder.meta$diversity_inverse_simpson)
qqnorm(resfinder.meta$diversity_inverse_simpson)
p10 <- ggviolin(resfinder.meta, x = "country", y = "diversity_shannon",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"))
resfinder.p10 <- p10 + stat_compare_means(comparisons = country.pairs, method = "wilcox.test")
resfinder.p10
p11 <- ggviolin(resfinder.meta, x = "country", y = "diversity_gini_simpson",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"))
resfinder.p11 <- p11 + stat_compare_means(comparisons = country.pairs, method = "wilcox.test")
resfinder.p11
p12 <- ggviolin(resfinder.meta, x = "country", y = "diversity_inverse_simpson",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"))
resfinder.p12 <- p12 + stat_compare_means(comparisons = country.pairs, method = "t.test")
resfinder.p12
# The resistome seems less complex in Finnish samples than in Burkinabe and Beninise.
nb.cols <- 14
mycolors <- colorRampPalette(brewer.pal(8, "Dark2"))(nb.cols)
loc <- plot_richness(resfinder_PHY, measures = c("Shannon", "Simpson"),
color="location", shape = "country")
resfinder.in <- loc + scale_fill_manual(values=mycolors) +
geom_boxplot() +
geom_point(size=3) + theme_bw() +
theme(axis.text.x = element_text(angle = 90, size =5))
resfinder.in
# Average 16S counts by location
mean16S_counts <- mean(metadata$SSU_counts, invert = TRUE)
lo_data <- data.frame(SUM = round(mean16S_counts * (sample_sums(otu_table(resfinder_PHY)))),
location = sample_data(resfinder_PHY)$location)
plot(lo_data$SUM~lo_data$location, cex.axis=0.5, srt=45, las=2, xlab=NULL) # There are the outliers
# Testing models to support the data
## Linear
model.ln<-lm(SUM~location, data=lo_data)
summary(model.ln)
shapiro.test(lo_data$SUM)
plot(model.ln)
# The p value is > 0.05 and differs significantly from normal distribution
## Log
model.logln<-lm(log(SUM)~location, data=lo_data)
summary(model.logln)
shapiro.test(log(lo_data$SUM))
plot(model.logln)
# The p value is > 0.05 and differs significantly from normal distribution
## Poisson
model.pois = glm(SUM ~ location , data = lo_data, family = poisson)
summary(model.pois)
plot(model.pois)
## Quasipoisson
model.qpois<-glm(SUM~location, data=lo_data, family="quasipoisson")
summary(model.qpois)
plot(model.qpois)
## Negative binomial
model.nb <- glm.nb(SUM~location, data=lo_data)
summary(model.nb)
plot(model.nb)
# Summarize and compare models
data.frame(linear=coef(model.ln),
loglinear=exp(coef(model.logln)),
poisson=exp(coef(model.pois)),
qpoisson=exp(coef(model.qpois)),
negbin=exp(coef(model.nb)))
# Critical value
qchisq(0.95, df.residual(model.pois))
deviance(model.ln)
deviance(model.logln)
deviance(model.pois)
deviance(model.qpois)
deviance(model.nb)
# None of the models fits the data. But negative binominal gets the closest.
qchisq(0.95, df.residual(model.pois))
deviance(model.ln)
deviance(model.logln)
deviance(model.pois)
deviance(model.qpois)
deviance(model.nb)
# Plot using neg. binom. model
fit <- glm.nb(SUM ~ location, data = lo_data, link = log)
lo_data <- cbind(lo_data, Mean = predict(fit, newdata = lo_data, type = "response"), SE = predict(fit, newdata = lo_data, type = "response", se.fit = T)$se.fit)
nb.cols <- 14
mycolors <- colorRampPalette(brewer.pal(8, "Dark2"))(nb.cols)
ARG.sum.lo <- ggplot(lo_data, aes(x = location, y = Mean)) +
scale_fill_manual(values = mycolors) +
geom_line() + geom_jitter(data = lo_data, aes(x = location, y = SUM, color = location),
size = 2.3, alpha = 0.5, width = 0.3) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.6, lwd = 0.6) +
geom_point(size = 0.9) +
theme_classic() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(y = "Sum abundance/16S",
x = "") + guides(color = FALSE, alpha = FALSE) + labs(title = "ARGs") +
scale_y_continuous(trans = "log10")
ARG.sum.lo
# Average 16S counts bu location
mean16S_counts <- mean(metadata$SSU_counts, invert = TRUE)
co_data <- data.frame(SUM = round(mean16S_counts * (sample_sums(otu_table(resfinder_PHY)))),
country = sample_data(resfinder_PHY)$country)
plot(co_data$SUM~co_data$country, cex.axis=0.5, srt=45, las=2, xlab=NULL)
# Testing models to support the data
## Linear
model.ln<-lm(SUM~country, data=co_data)
summary(model.ln)
shapiro.test(lo_data$SUM)
plot(model.ln)
# The p value is > 0.05 and differs significantly from normal distribution
## Log
model.logln<-lm(log(SUM)~country, data=co_data)
summary(model.logln)
shapiro.test(log(co_data$SUM))
plot(model.logln)
# Data is not normally distributed.
## Poisson
model.pois = glm(SUM~country , data = co_data, family = poisson)
summary(model.pois)
plot(model.pois)
## Quasipoisson
model.qpois<-glm(SUM~country, data=co_data, family="quasipoisson")
summary(model.qpois)
plot(model.qpois)
## Negative binomial
model.nb <- glm.nb(SUM~country, data=co_data)
summary(model.nb)
plot(model.nb)
1/model.nb$theta
-2*(logLik(model.pois)-logLik(model.nb))
# Summarize models
data.frame(linear=coef(model.ln),
loglinear=exp(coef(model.logln)),
poisson=exp(coef(model.pois)),
qpoisson=exp(coef(model.qpois)),
negbin=exp(coef(model.nb)))
# Critical value
qchisq(0.95, df.residual(model.nb))
deviance(model.ln)
deviance(model.logln)
deviance(model.pois)
deviance(model.qpois)
deviance(model.nb)
# None of the models fits the data. But negative binominal gets the closest.
# Plot using neg. binom. model
co_data <- data.frame(SUM = round(mean16S_counts * (sample_sums(otu_table(resfinder_PHY)))),
country = sample_data(resfinder_PHY)$country)
fit <- glm.nb(SUM ~ country, data = co_data, link = log)
co_data <- cbind(co_data, Mean = predict(fit, newdata = co_data, type = "response"), SE = predict(fit, newdata = co_data, type = "response", se.fit = T)$se.fit)
ARG.sum.co <- ggplot(co_data, aes(x = country, y = Mean)) +
scale_color_manual(values=c("#FF333F", "#35E0F5", "#531592")) +
geom_line() + geom_jitter(data = co_data, aes(x = country, y = SUM, color = country),
size = 2.3, alpha = 0.5, width = 0.3) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.6, lwd = 0.6) +
geom_point(size = 0.9) +
theme_classic() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(y = "Sum abundance/16S",
x = "") + guides(color = FALSE, alpha = FALSE) + labs(title = "ARGs") + scale_y_log10()
ARG.sum.co
co_data <- data.frame(SUM = round(mean16S_counts * (sample_sums(otu_table(resfinder_PHY)))),
country = sample_data(resfinder_PHY)$country)
# Exclude outliers
#co_data[which(co_data$SUM %in% outliers),]
#co_data <- co_data[-which(co_data$SUM %in% outliers),]
fit <- glm.nb(SUM ~ country, data = co_data, link = log)
# Tukey's post hoc test
glht.mod <- glht(fit, mcp(country = "Tukey"))
summary(glht(glht.mod))
resfinder_PHY_Class <- tax_glom(resfinder_PHY, taxrank = "Class")
# All classes
resfinder_PHY_Class_abund <- prune_taxa(names(sort(taxa_sums(resfinder_PHY_Class), TRUE)),
resfinder_PHY_Class)
# Normalize by number of samples in each country
otu_table(resfinder_PHY_Class_abund) <-   (otu_table(resfinder_PHY_Class_abund)[,]/as.matrix(table(sample_data(resfinder_PHY_Class_abund)$location))[, 1])
p17<-plot_bar(resfinder_PHY_Class_abund, x="location", fill="Class")
resfinder.p17 <- p17 + facet_grid(~ country, scales = "free") +
ggtitle("Sum of relative abundances of ARGs by classes/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 12),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 12), keywidth = 1.5, keyheight = 1.5))
# Remove OTU separators
resfinder.p17 + geom_bar(aes(color=Class, fill=Class), stat="identity", position="stack", size = 0.5)
