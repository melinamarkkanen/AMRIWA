# Load data
metaxa.com <- metaxa_PHY_ww
taxic_metaxa <- as.data.frame(metaxa.com@tax_table)
# Add OTU ids
taxic_metaxa$OTU <- rownames(taxic_metaxa)
colnames(taxic_metaxa)
# Convert into a matrix.
taxmat_metaxa <- as.matrix(taxic_metaxa)
# Convert into phyloseq compatible file.
new.tax_metaxa <- tax_table(taxmat_metaxa)
# Incroporate into new phyloseq object
tax_table(metaxa.com) <- new.tax_metaxa
# Class level
metaxa_top6class <- aggregate_top_taxa(metaxa.com, top = 6, "Class")
metaxa_top6class.rel <- microbiome::transform(metaxa_top6class, "compositional")
metaxa_top6class.p13 <- plot_composition(metaxa_top6class.rel, group_by = "country") +
theme(legend.position = "bottom") + theme_classic() +
theme(axis.text.x = element_text(angle = 90, size = 8), axis.title = element_blank()) +
ggtitle("Relative abundance of top 6 classes, Metaxa2")
#metaxa_top6class.p13 +
#   scale_fill_manual(values = c("#1B9E77","#D95F02","#7570B3","#E7298A","#66A61E","#E6AB02", "#FFFFFF"))
# Load data
metaphlan.com <- metaphlan_PHY_ww
taxic_metaphlan <- as.data.frame(metaphlan.com@tax_table)
# Add OTU ids
taxic_metaphlan$OTU <- rownames(taxic_metaphlan)
colnames(taxic_metaphlan)
# Convert into a matrix.
taxmat <- as.matrix(taxic_metaphlan)
# Convert into phyloseq compatible file.
new.tax_metaphlan <- tax_table(taxmat_metaphlan)
taxmat_metaphlan <- as.matrix(taxic_metaphlan)
# Convert into phyloseq compatible file.
new.tax_metaphlan <- tax_table(taxmat_metaphlan)
# Incroporate into new phyloseq object
tax_table(metaphlan.com) <- new.tax_metaphlan
# Class level
metaphlan_top6class <- aggregate_top_taxa(metaphlan.com, top = 6, "Class")
metaphlan_top6class.rel <- microbiome::transform(metaphlan_top6class, "compositional")
metaphlan_top6class.p14 <- plot_composition(metaphlan_top6class.rel, group_by = "country") +
theme(legend.position = "bottom") + theme_classic() +
theme(axis.text.x = element_text(angle = 90, size = 8), axis.title = element_blank()) +
ggtitle("Relative abundance of top 6 classes, Metaphlan3")
metaxa_top6class.p13 +
scale_fill_manual(values = c("#1B9E77","#D95F02","#7570B3","#E7298A","#66A61E","#E6AB02", "#FFFFFF"))
metaphlan_top6class.p14 +
scale_fill_manual(values = c("#1B9E77","#D95F02","#7570B3","#E7298A","#66A61E","#E6AB02", "#FFFFFF"))
# Load data
metaxa_genus <- read.delim("~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/metaxa_genus.txt")
# Create OTU table
OTU_metaxa <- metaxa_genus[,-1]
# Create tax table
tax_table_metaxa <- data.frame(str_split_fixed(data.frame(metaxa_genus) [,1], ";", 6))
colnames(tax_table_metaxa) <- c("Domain", "Phylum", "Class", "Order", "Family", "Genus")
# Combine into phyloseq object
metaxa_PHY <- phyloseq(otu_table(OTU_metaxa, taxa_are_rows=TRUE),
tax_table(as.matrix(tax_table_metaxa)), sample_data(metadata))
metadata$SSU_counts <- sample_sums(metaxa_PHY)
# With low quality (BFH24_S142, BH63_S118, FH10_S171)
metaxa_PHY = subset_samples(metaxa_PHY, name != "BFH24_S142" & name != "BH63_S118" & name != "FH10_S171")
# Feces samples (BH20_S88, BH22_S89, BH24_S90, BH25_S91)
metaxa_PHY_ww = subset_samples(metaxa_PHY, name!="BH20_S88" & name!="BH22_S89" & name!="BH24_S90" & name!="BH25_S91")
# Modify data in command-line to match sample names in metadata file
## tr '|' ';' <merged_abundance_table.txt > mod_merged_abundance_table.txt
## sed -i 's/_profile//g' mod_merged_abundance_table.txt
## sed -i 's/BFH38-A_S156/BFH38.A_S156/g' mod_merged_abundance_table.txt
## sed -i 's/BFH38-B_S157/BFH38.B_S157/g' mod_merged_abundance_table.txt
## sed -i 's/BH34-A_S98/BH34.A_S98/g' mod_merged_abundance_table.txt
## sed -i 's/BH34-B_S99/BH34.B_S99/g' mod_merged_abundance_table.txt
# Load data
metaphlan <- as.matrix(read.table("mod_merged_abundance_table.txt", fill = 1, header = T, check.names = F))
# Exclude the first column "NCBI_tax_id"
metaphlan <- subset(metaphlan, select = -c(NCBI_tax_id))
# Create OTU table
OTU_metaphlan <- metaphlan[,-1]
# Change values as numeric
class(OTU_metaphlan) <- "numeric"
# Create tax_table
tax_table_metaphlan <- data.frame(str_split_fixed(data.frame(metaphlan) [,1], ";", 7))
colnames(tax_table_metaphlan) <- c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")
# Clean "*__"
tax_table_metaphlan <- apply(tax_table_metaphlan, 2, function(y) (gsub(".__", "", y)))
# Combine into phyloseq object
metaphlan_PHY <- phyloseq(otu_table(OTU_metaphlan, taxa_are_rows = TRUE), tax_table(as.matrix(tax_table_metaphlan)), sample_data(metadata))
# Virus
metaphlan_PHY <- subset_taxa(metaphlan_PHY, Kingdom != "Virus")
# With low quality (BFH24_S142, BH63_S118, FH10_S171)
metaphlan_PHY = subset_samples(metaxa_PHY, name != "BFH24_S142" & name != "BH63_S118" & name != "FH10_S171")
# Feces samples (BH20_S88, BH22_S89, BH24_S90, BH25_S91)
metaphlan_PHY_ww = subset_samples(metaphlan_PHY, name!="BH20_S88" & name!="BH22_S89" & name!="BH24_S90" & name!="BH25_S91")
# Load data
metaxa.com <- metaxa_PHY_ww
taxic_metaxa <- as.data.frame(metaxa.com@tax_table)
# Add OTU ids
taxic_metaxa$OTU <- rownames(taxic_metaxa)
colnames(taxic_metaxa)
# Convert into a matrix.
taxmat_metaxa <- as.matrix(taxic_metaxa)
# Convert into phyloseq compatible file.
new.tax_metaxa <- tax_table(taxmat_metaxa)
# Incroporate into new phyloseq object
tax_table(metaxa.com) <- new.tax_metaxa
# Class level
metaxa_top6class <- aggregate_top_taxa(metaxa.com, top = 6, "Class")
metaxa_top6class.rel <- microbiome::transform(metaxa_top6class, "compositional")
metaxa_top6class.p13 <- plot_composition(metaxa_top6class.rel, group_by = "country") +
theme(legend.position = "bottom") + theme_classic() +
theme(axis.text.x = element_text(angle = 90, size = 8), axis.title = element_blank()) +
ggtitle("Relative abundance of top 6 classes, Metaxa2")
#metaxa_top6class.p13 +
#   scale_fill_manual(values = c("#1B9E77","#D95F02","#7570B3","#E7298A","#66A61E","#E6AB02", "#FFFFFF"))
# Load data
metaphlan.com <- metaphlan_PHY_ww
taxic_metaphlan <- as.data.frame(metaphlan.com@tax_table)
# Add OTU ids
taxic_metaphlan$OTU <- rownames(taxic_metaphlan)
colnames(taxic_metaphlan)
# Convert into a matrix.
taxmat_metaphlan <- as.matrix(taxic_metaphlan)
# Convert into phyloseq compatible file.
new.tax_metaphlan <- tax_table(taxmat_metaphlan)
# Incroporate into new phyloseq object
tax_table(metaphlan.com) <- new.tax_metaphlan
# Class level
metaphlan_top6class <- aggregate_top_taxa(metaphlan.com, top = 6, "Class")
metaphlan_top6class.rel <- microbiome::transform(metaphlan_top6class, "compositional")
metaphlan_top6class.p14 <- plot_composition(metaphlan_top6class.rel, group_by = "country") +
theme(legend.position = "bottom") + theme_classic() +
theme(axis.text.x = element_text(angle = 90, size = 8), axis.title = element_blank()) +
ggtitle("Relative abundance of top 6 classes, Metaphlan3")
metaxa_top6class.p13 +
scale_fill_manual(values = c("#1B9E77","#D95F02","#7570B3","#E7298A","#66A61E","#E6AB02", "#FFFFFF"))
metaphlan_top6class.p14 +
scale_fill_manual(values = c("#1B9E77","#D95F02","#7570B3","#E7298A","#66A61E","#E6AB02", "#FFFFFF"))
nsamples(metaphlan_PHY_ww)
metaphlan_bp <- core(metaphlan_PHY_ww, detection = 10, prevalence = 10/nsamples(metaphlan_PHY_ww))
hist(log10(taxa_sums(metaphlan_bp)))
metaphlan_bp.rel <- microbiome::transform(metaphlan_bp, "compositional")
metaphlan_bp.p15 <- plot_taxa_boxplot(metaphlan_bp.rel, "Genus", 10, "sample", color = "Set2", "Relative abundance of top 10 genera")
?plot_taxa_boxplot
??plot_taxa_boxplot
library(microbiomeutilities)
metaphlan_bp.p15 <- plot_taxa_boxplot(metaphlan_bp.rel, "Genus", 10, "sample", color = "Set2", "Relative abundance of top 10 genera")
metaphlan_bp.p15 <- plot_taxa_boxplot(metaphlan_bp.rel, "Class", 10, "sample", color = "Set2", "Relative abundance of top 10 classes")
metaphlan_bp.p15 <- plot_taxa_boxplot(metaphlan_bp.rel, "Class", 10, "SampleType", color = "Set2", "Relative abundance of top 10 classes")
metaphlan_bp_pcoa_bray <- ordinate(metaphlan_bp.rel, "PCoA", "bray")
plot_scree(metaphlan_bp_pcoa_bray) + theme_bw()
bp <- plot_taxa_boxplot(metaphlan_bp.rel, "Genus", 10, "SampleType", color = "Set2", "Relative abundance of top 10 genera")
bp <- plot_taxa_boxplot(metaphlan_bp.rel, "Phylum", 10, "SampleType", color = "Set2", "Relative abundance of top 10 genera")
metaphlan_bp <- core(metaphlan_PHY_ww, detection = 6, prevalence = 6/nsamples(metaphlan_PHY_ww))
hist(log10(taxa_sums(metaphlan_bp)))
metaphlan_bp.rel <- microbiome::transform(metaphlan_bp, "compositional")
bp <- plot_taxa_boxplot(metaphlan_bp.rel, "Class", 6, "SampleType", color = "Set2", "Relative abundance of top 10 genera")
bp <- plot_taxa_boxplot(metaphlan_bp.rel, "Class", 6, "sample", color = "Set2", "Relative abundance of top 6 classes")
View(metaphlan_bp.rel)
bp <- plot_taxa_boxplot(metaphlan_bp, "Class", 6, "sample", color = "Set2", "Relative abundance of top 6 classes")
print(bp)
bp
plot_taxa_boxplot(metaphlan_bp, "Class", 6, "sample", color = "Set2", "Relative abundance of top 6 classes")
print(bp)
metaphlan_bp <- core(metaphlan_PHY_ww, detection = 5, prevalence = 5/nsamples(metaphlan_PHY_ww))
hist(log10(taxa_sums(metaphlan_bp)))
metaphlan_bp.rel <- microbiome::transform(metaphlan_bp, "compositional")
pn <- plot_taxa_boxplot(metaphlan_bp.rel, "Genus", 10, "name", color = "Set2", "Relative abundance of top 10 genera")
nsamples(metaxa_PHY_ww)
metaxa_bp <- core(metaxa_PHY_ww, detection = 5, prevalence = 5/nsamples(metaxa_PHY_ww))
hist(log10(taxa_sums(metaxa_bp)))
metaxa_bp.rel <- microbiome::transform(metaxa_bp, "compositional")
pn <- plot_taxa_boxplot(metaxa_bp.rel, "Genus", 10, "sample", color = "Set2", "Relative abundance of top 10 genera")
pn <- plot_taxa_boxplot(metaxa_bp.rel, "Genus", 10, "location", color = "Set2", "Relative abundance of top 10 genera")
pn <- plot_taxa_boxplot(metaxa_bp.rel, "Genus", 10, "country", color = "Set2", "Relative abundance of top 10 genera")
any(taxa_sums(metaxa_PHY_ww) == 0)
metaxa_PHY_ww_clear <- prune_taxa(taxa_sums(metaxa_PHY_ww) > 0, metaxa_PHY_ww)
any(taxa_sums(metaxa_PHY_ww_clear) == 0)
# With low quality (BFH24_S142, BH63_S118, FH10_S171)
metaxa_PHY = subset_samples(metaxa_PHY, name != "BFH24_S142" & name != "BH63_S118" & name != "FH10_S171")
# Feces samples (BH20_S88, BH22_S89, BH24_S90, BH25_S91)
metaxa_PHY_ww = subset_samples(metaxa_PHY, name!="BH20_S88" & name!="BH22_S89" & name!="BH24_S90" & name!="BH25_S91")
any(taxa_sums(metaxa_PHY_ww) == 0)
metaxa_PHY_ww <- prune_taxa(taxa_sums(metaxa_PHY_ww) > 0, metaxa_PHY_ww)
any(taxa_sums(metaxa_PHY_ww) == 0)
# Change into relative data
metaxa_rel_PHY <- transform_sample_counts(metaxa_PHY_ww, function(x) x/sum(x))
# Ordinate and plot data
metaxa_rel_PHY_ord <- ordinate(metaxa_rel_PHY, method = "PCoA", distance = "horn")
p1 <- plot_ordination(metaxa_rel_PHY, metaxa_rel_PHY_ord, color = "country", label = "name")
metaxa.p1 <- p1 + scale_color_manual(values=c("#FF333F", "#35E0F5", "#531592")) + geom_point(colour = "black",
pch = 21, size = 2, alpha = 0.5) + stat_ellipse(level = 0.9, linetype = 1) +
theme_minimal() + labs(title = "Metaxa2")
metaxa.p1
# Test significance using pair-wise adonis
metaxa_temp <- subset_samples(metaxa_PHY_ww, (country == "Benin" | country == "Finland"))
metaxa_dist <- vegdist(t(otu_table(metaxa_temp)), dist = "horn")
adonis(metaxa_dist ~ country, data = data.frame(sample_data(metaxa_temp), permutations = 9999))
metaxa_temp <- subset_samples(metaxa_PHY_ww, (country == "Burkina Faso" | country == "Finland"))
metaxa_dist <- vegdist(t(otu_table(metaxa_temp)), dist = "horn")
adonis(metaxa_dist ~ country, data = data.frame(sample_data(metaxa_temp), permutations = 9999))
metaxa_temp <- subset_samples(metaxa_PHY_ww, (country == "Benin" | country == "Burkina Faso"))
metaxa_dist <- vegdist(t(otu_table(metaxa_temp)), dist = "horn")
adonis(metaxa_dist ~ country, data = data.frame(sample_data(metaxa_temp), permutations = 9999))
# The explanatory variable "country" explains some (~15.7 %) of the difference in the grouping of taxonomy in the comparison between of Benin and Finland.
metaxa_temp <- subset_samples(metaxa_PHY_ww, (country == "Benin" | country == "Finland"))
metaxa_dist <- vegdist(t(otu_table(metaxa_temp)), dist = "horn")
adonis(metaxa_dist ~ country, data = data.frame(sample_data(metaxa_temp), permutations = 9999))
metaxa_temp <- subset_samples(metaxa_PHY_ww, (country == "Burkina Faso" | country == "Finland"))
metaxa_dist <- vegdist(t(otu_table(metaxa_temp)), dist = "horn")
adonis(metaxa_dist ~ country, data = data.frame(sample_data(metaxa_temp), permutations = 9999))
metaxa_temp <- subset_samples(metaxa_PHY_ww, (country == "Benin" | country == "Burkina Faso"))
metaxa_dist <- vegdist(t(otu_table(metaxa_temp)), dist = "horn")
adonis(metaxa_dist ~ country, data = data.frame(sample_data(metaxa_temp), permutations = 9999))
# Virus
metaphlan_PHY <- subset_taxa(metaphlan_PHY, Kingdom != "Virus")
# Modify data in command-line to match sample names in metadata file
## tr '|' ';' <merged_abundance_table.txt > mod_merged_abundance_table.txt
## sed -i 's/_profile//g' mod_merged_abundance_table.txt
## sed -i 's/BFH38-A_S156/BFH38.A_S156/g' mod_merged_abundance_table.txt
## sed -i 's/BFH38-B_S157/BFH38.B_S157/g' mod_merged_abundance_table.txt
## sed -i 's/BH34-A_S98/BH34.A_S98/g' mod_merged_abundance_table.txt
## sed -i 's/BH34-B_S99/BH34.B_S99/g' mod_merged_abundance_table.txt
# Load data
metaphlan <- as.matrix(read.table("mod_merged_abundance_table.txt", fill = 1, header = T, check.names = F))
# Exclude the first column "NCBI_tax_id"
metaphlan <- subset(metaphlan, select = -c(NCBI_tax_id))
# Create OTU table
OTU_metaphlan <- metaphlan[,-1]
# Change values as numeric
class(OTU_metaphlan) <- "numeric"
# Create tax_table
tax_table_metaphlan <- data.frame(str_split_fixed(data.frame(metaphlan) [,1], ";", 7))
colnames(tax_table_metaphlan) <- c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")
# Clean "*__"
tax_table_metaphlan <- apply(tax_table_metaphlan, 2, function(y) (gsub(".__", "", y)))
# Combine into phyloseq object
metaphlan_PHY <- phyloseq(otu_table(OTU_metaphlan, taxa_are_rows = TRUE), tax_table(as.matrix(tax_table_metaphlan)), sample_data(metadata))
# Virus
metaphlan_PHY <- subset_taxa(metaphlan_PHY, Kingdom != "Virus")
# With low quality (BFH24_S142, BH63_S118, FH10_S171)
metaphlan_PHY = subset_samples(metaxa_PHY, name != "BFH24_S142" & name != "BH63_S118" & name != "FH10_S171")
# Feces samples (BH20_S88, BH22_S89, BH24_S90, BH25_S91)
metaphlan_PHY_ww = subset_samples(metaphlan_PHY, name!="BH20_S88" & name!="BH22_S89" & name!="BH24_S90" & name!="BH25_S91")
# Clear taxa that is not present in any of the remaining samples
any(taxa_sums(metaphlan_PHY_ww) == 0)
metaxa_PHY_ww <- prune_taxa(taxa_sums(metaphlan_PHY_ww) > 0, metaphlan_PHY_ww)
any(taxa_sums(metaphlan_PHY_ww) == 0)
any(taxa_sums(metaxa_PHY_ww) == 0)
metaxa_PHY <- prune_taxa(taxa_sums(metaxa_PHY_ww) > 0, metaxa_PHY_ww)
any(taxa_sums(metaxa_PHY) == 0)
# Load data
metaxa_genus <- read.delim("~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/metaxa_genus.txt")
# Create OTU table
OTU_metaxa <- metaxa_genus[,-1]
# Create tax table
tax_table_metaxa <- data.frame(str_split_fixed(data.frame(metaxa_genus) [,1], ";", 6))
colnames(tax_table_metaxa) <- c("Domain", "Phylum", "Class", "Order", "Family", "Genus")
# Combine into phyloseq object
metaxa_PHY <- phyloseq(otu_table(OTU_metaxa, taxa_are_rows=TRUE),
tax_table(as.matrix(tax_table_metaxa)), sample_data(metadata))
# With low quality (BFH24_S142, BH63_S118, FH10_S171)
metaxa_PHY = subset_samples(metaxa_PHY, name != "BFH24_S142" & name != "BH63_S118" & name != "FH10_S171")
# Feces samples (BH20_S88, BH22_S89, BH24_S90, BH25_S91)
metaxa_PHY_ww = subset_samples(metaxa_PHY, name!="BH20_S88" & name!="BH22_S89" & name!="BH24_S90" & name!="BH25_S91")
# Clear taxa that is not present in any of the remaining samples
any(taxa_sums(metaxa_PHY_ww) == 0)
metaxa_PHY <- prune_taxa(taxa_sums(metaxa_PHY_ww) > 0, metaxa_PHY_ww)
any(taxa_sums(metaxa_PHY) == 0)
metaxa_temp <- subset_samples(metaxa_PHY_ww, (country == "Benin" | country == "Finland"))
metaxa_dist <- vegdist(t(otu_table(metaxa_temp)), dist = "horn")
adonis(metaxa_dist ~ country, data = data.frame(sample_data(metaxa_temp), permutations = 9999))
metaxa_temp <- subset_samples(metaxa_PHY_ww, (country == "Burkina Faso" | country == "Finland"))
metaxa_dist <- vegdist(t(otu_table(metaxa_temp)), dist = "horn")
adonis(metaxa_dist ~ country, data = data.frame(sample_data(metaxa_temp), permutations = 9999))
metaxa_temp <- subset_samples(metaxa_PHY_ww, (country == "Benin" | country == "Burkina Faso"))
metaxa_dist <- vegdist(t(otu_table(metaxa_temp)), dist = "horn")
adonis(metaxa_dist ~ country, data = data.frame(sample_data(metaxa_temp), permutations = 9999))
# Modify data in command-line to match sample names in metadata file
## tr '|' ';' <merged_abundance_table.txt > mod_merged_abundance_table.txt
## sed -i 's/_profile//g' mod_merged_abundance_table.txt
## sed -i 's/BFH38-A_S156/BFH38.A_S156/g' mod_merged_abundance_table.txt
## sed -i 's/BFH38-B_S157/BFH38.B_S157/g' mod_merged_abundance_table.txt
## sed -i 's/BH34-A_S98/BH34.A_S98/g' mod_merged_abundance_table.txt
## sed -i 's/BH34-B_S99/BH34.B_S99/g' mod_merged_abundance_table.txt
# Load data
metaphlan <- as.matrix(read.table("mod_merged_abundance_table.txt", fill = 1, header = T, check.names = F))
# Exclude the first column "NCBI_tax_id"
metaphlan <- subset(metaphlan, select = -c(NCBI_tax_id))
# Create OTU table
OTU_metaphlan <- metaphlan[,-1]
# Change values as numeric
class(OTU_metaphlan) <- "numeric"
# Create tax_table
tax_table_metaphlan <- data.frame(str_split_fixed(data.frame(metaphlan) [,1], ";", 7))
colnames(tax_table_metaphlan) <- c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")
# Clean "*__"
tax_table_metaphlan <- apply(tax_table_metaphlan, 2, function(y) (gsub(".__", "", y)))
# Combine into phyloseq object
metaphlan_PHY <- phyloseq(otu_table(OTU_metaphlan, taxa_are_rows = TRUE), tax_table(as.matrix(tax_table_metaphlan)), sample_data(metadata))
# Virus
metaphlan_PHY <- subset_taxa(metaphlan_PHY, Kingdom != "Virus")
# With low quality (BFH24_S142, BH63_S118, FH10_S171)
metaphlan_PHY = subset_samples(metaxa_PHY, name != "BFH24_S142" & name != "BH63_S118" & name != "FH10_S171")
# Feces samples (BH20_S88, BH22_S89, BH24_S90, BH25_S91)
metaphlan_PHY_ww = subset_samples(metaphlan_PHY, name!="BH20_S88" & name!="BH22_S89" & name!="BH24_S90" & name!="BH25_S91")
# Clear taxa that is not present in any of the remaining samples
any(taxa_sums(metaphlan_PHY_ww) == 0)
metaxa_PHY <- prune_taxa(taxa_sums(metaphlan_PHY_ww) > 0, metaphlan_PHY_ww)
any(taxa_sums(metaphlan_PHY) == 0)
# Modify data in command-line to match sample names in metadata file
## tr '|' ';' <merged_abundance_table.txt > mod_merged_abundance_table.txt
## sed -i 's/_profile//g' mod_merged_abundance_table.txt
## sed -i 's/BFH38-A_S156/BFH38.A_S156/g' mod_merged_abundance_table.txt
## sed -i 's/BFH38-B_S157/BFH38.B_S157/g' mod_merged_abundance_table.txt
## sed -i 's/BH34-A_S98/BH34.A_S98/g' mod_merged_abundance_table.txt
## sed -i 's/BH34-B_S99/BH34.B_S99/g' mod_merged_abundance_table.txt
# Load data
metaphlan <- as.matrix(read.table("mod_merged_abundance_table.txt", fill = 1, header = T, check.names = F))
# Exclude the first column "NCBI_tax_id"
metaphlan <- subset(metaphlan, select = -c(NCBI_tax_id))
# Create OTU table
OTU_metaphlan <- metaphlan[,-1]
# Change values as numeric
class(OTU_metaphlan) <- "numeric"
# Create tax_table
tax_table_metaphlan <- data.frame(str_split_fixed(data.frame(metaphlan) [,1], ";", 7))
colnames(tax_table_metaphlan) <- c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")
# Clean "*__"
tax_table_metaphlan <- apply(tax_table_metaphlan, 2, function(y) (gsub(".__", "", y)))
# Combine into phyloseq object
metaphlan_PHY <- phyloseq(otu_table(OTU_metaphlan, taxa_are_rows = TRUE), tax_table(as.matrix(tax_table_metaphlan)), sample_data(metadata))
# Virus
metaphlan_PHY <- subset_taxa(metaphlan_PHY, Kingdom != "Virus")
# With low quality (BFH24_S142, BH63_S118, FH10_S171)
metaphlan_PHY = subset_samples(metaxa_PHY, name != "BFH24_S142" & name != "BH63_S118" & name != "FH10_S171")
# Feces samples (BH20_S88, BH22_S89, BH24_S90, BH25_S91)
metaphlan_PHY_ww = subset_samples(metaphlan_PHY, name!="BH20_S88" & name!="BH22_S89" & name!="BH24_S90" & name!="BH25_S91")
# Clear taxa that is not present in any of the remaining samples
any(taxa_sums(metaphlan_PHY_ww) == 0)
metaxa_PHY <- prune_taxa(taxa_sums(metaphlan_PHY_ww) > 0, metaphlan_PHY_ww)
any(taxa_sums(metaphlan_PHY) == 0)
# Change into relative data
metaxa_rel_PHY <- transform_sample_counts(metaxa_PHY, function(x) x/sum(x))
# Ordinate and plot data
metaxa_rel_PHY_ord <- ordinate(metaxa_rel_PHY, method = "PCoA", distance = "horn")
p1 <- plot_ordination(metaxa_rel_PHY, metaxa_rel_PHY_ord, color = "country", label = "name")
metaxa.p1 <- p1 + scale_color_manual(values=c("#FF333F", "#35E0F5", "#531592")) + geom_point(colour = "black",
pch = 21, size = 2, alpha = 0.5) + stat_ellipse(level = 0.9, linetype = 1) +
theme_minimal() + labs(title = "Metaxa2")
metaxa.p1
# Test significance using pair-wise adonis
metaxa_temp <- subset_samples(metaxa_PHY, (country == "Benin" | country == "Finland"))
metaxa_dist <- vegdist(t(otu_table(metaxa_temp)), dist = "horn")
adonis(metaxa_dist ~ country, data = data.frame(sample_data(metaxa_temp), permutations = 9999))
metaxa_temp <- subset_samples(metaxa_PHY, (country == "Burkina Faso" | country == "Finland"))
metaxa_dist <- vegdist(t(otu_table(metaxa_temp)), dist = "horn")
adonis(metaxa_dist ~ country, data = data.frame(sample_data(metaxa_temp), permutations = 9999))
metaxa_temp <- subset_samples(metaxa_PHY, (country == "Benin" | country == "Burkina Faso"))
metaxa_dist <- vegdist(t(otu_table(metaxa_temp)), dist = "horn")
adonis(metaxa_dist ~ country, data = data.frame(sample_data(metaxa_temp), permutations = 9999))
# The explanatory variable "country" explains some (~15.7 %) of the difference in the grouping of taxonomy in the comparison between of Benin and Finland.
# Modify mapping output file "ARG_genemat.txt" in command line to match sample names in metadata file
## sed 's/BFH38-A_S156/BFH38.A_S156/g' ARG_genemat.txt > mod_ARG_genemat.txt
## sed -i 's/BFH38-B_S157/BFH38.B_S157/g' mod_ARG_genemat.txt
## sed -i 's/BH34-A_S98/BH34.A_S98/g' mod_ARG_genemat.txt
## sed -i 's/BH34-B_S99/BH34.B_S99/g' mod_ARG_genemat.txt
ARG_genemat <-as.matrix(read.table("mod_ARG_genemat.txt", header= T, check.names = F, row.names = 1))
# Modify "resfinder.fasta" file so that only hits remain
## seqkit grep -f ARG_genes.txt resfinder.fasta > filtered_resfinder.fasta
# Check if there are correct number of lines
## grep ">" filtered_resfinder.fasta | wc -l
# Print out the gene lengths of these genes into file "lengths_resfinder.txt"
## cat filtered_resfinder.fasta | awk '$0 ~ ">" {if (NR > 1) {print c;} c=0;printf substr($0,2,100) "\t"; } $0 !~ ">" {c+=length($0);} END { print c; }' > lengths_resfinder.txt
# Reorder in excel to match with file "ARG_genemat_norm"
lengths_resfinder <-as.matrix(read.table("lengths_resfinder.txt", header= F, check.names = T, row.names = 1))
colnames(lengths_resfinder) <- c("Length")
# Divide by ResFinder hit gene lengths
ARG_length_norm <- ARG_genemat/lengths_resfinder[, 1]
# Divide by SSU counts and normalize to bacterial 16S rRNA length (1550)
ARG_genemat_norm <- t(t(ARG_length_norm)/metadata$SSU_counts) * 1550
# Check if correct:
identical(ARG_genemat[2020, 4]/metadata$SSU_counts[4], ARG_genemat_norm[2020, 4])
# Save and load again to exclude row.names
write.table(ARG_genemat_norm, "~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/ARG_genemat_norm.txt", row.names=T, sep = "\t", col.names = T)
ARG_genemat_norm <- read.delim("~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/ARG_genemat_norm.txt", row.names=NULL)
ARG_genemat_norm$row.names<-NULL
# Create tax table
tax_table_resfinder <- read.csv("~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/tax_table_resfinder.txt", header=FALSE, sep=";")
colnames(tax_table_resfinder) <- c("Gene", "Class")
# Combine to phyloseq object
resfinder_PHY <- phyloseq(otu_table(ARG_genemat_norm, taxa_are_rows = TRUE), sample_data(metadata),
tax_table(as.matrix(tax_table_resfinder)))
# With low quality (BFH24_S142, BH63_S118, FH10_S171)
resfinder_PHY = subset_samples(resfinder_PHY, name != "BFH24_S142" & name != "BH63_S118" & name != "FH10_S171")
# Feces samples (BH20_S88, BH22_S89, BH24_S90, BH25_S91)
resfinder_PHY_ww = subset_samples(resfinder_PHY, name!="BH20_S88" & name!="BH22_S89" & name!="BH24_S90" & name!="BH25_S91")
any(taxa_sums(resfinder_PHY_ww) == 0)
resfinder_PHY <- prune_taxa(taxa_sums(resfinder_PHY_ww) > 0, resfinder_PHY_ww)
any(taxa_sums(resfinder_PHY) == 0)
# Ordinate and plot data
resfinder_PHY_ord <- ordinate(resfinder_PHY, method = "PCoA", distance = "horn")
p3 <- plot_ordination(resfinder_PHY, resfinder_PHY_ord, color = "country", label = "name")
resfinder.p3 <- p3 + scale_color_manual(values=c("#FF333F", "#35E0F5", "#531592")) +
geom_point(colour = "black", pch = 21, size = 2, alpha = 0.5) + stat_ellipse(level = 0.9, linetype = 1) +
theme_minimal() + labs(title = "ResFinder")
resfinder.p3
# Test significance between all pairs
resfinder_temp <- subset_samples(resfinder_PHY, (country == "Finland" | country == "Benin"))
resfinder_dist <- vegdist(t(otu_table(resfinder_temp)), dist = "horn")
adonis(resfinder_dist ~ country, data = data.frame(sample_data(resfinder_temp), permutations = 9999))
resfinder_temp <- subset_samples(resfinder_PHY, (country == "Burkina Faso" | country == "Benin"))
resfinder_dist <- vegdist(t(otu_table(resfinder_temp)), dist = "horn")
adonis(resfinder_dist ~ country, data = data.frame(sample_data(resfinder_temp), permutations = 9999))
resfinder_temp <- subset_samples(resfinder_PHY, (country == "Finland" | country == "Burkina Faso"))
resfinder_dist <- vegdist(t(otu_table(resfinder_temp)), dist = "horn")
adonis(resfinder_dist ~ country, data = data.frame(sample_data(resfinder_temp), permutations = 9999))
# The explanatory variable "country" explains some (~10.1 % [HC: ~10.2 %]) of the difference in the grouping of taxonomy in the comparison between of Benin and Finland and some (~12.5 % [HC: ~12.9 %]) between Burkina Faso and Finland.
# Take a look at the indexes (now not the relative data, we'll see...)
metaxa_tab <-microbiome::alpha(metaxa_PHY, index = "all")
kable(head(metaxa_tab))
# Create data table
metaxa.meta <- meta(metaxa_PHY)
kable(head(metaxa.meta))
# Add indexes to data table
## Shannon
metaxa.meta$diversity_shannon <- metaxa_tab$diversity_shannon
## Gini Simpson
metaxa.meta$diversity_gini_simpson <- metaxa_tab$diversity_gini_simpson
## Inverse Simpson
metaxa.meta$diversity_inverse_simpson <- metaxa_tab$diversity_inverse_simpson
# Check whether the distribution of the diversity is normal
hist(metaxa.meta$diversity_shannon)
shapiro.test(metaxa.meta$diversity_shannon) # Does not fit the assumption of normal distribution > wilcox test.
qqnorm(metaxa.meta$diversity_shannon)
hist(metaxa.meta$diversity_gini_simpson)
shapiro.test(metaxa.meta$diversity_gini_simpson) # Does not fit the assumption of normal distribution > wilcox test.
qqnorm(metaxa.meta$diversity_gini_simpson)
hist(metaxa.meta$diversity_inverse_simpson)
shapiro.test(metaxa.meta$diversity_inverse_simpson)
qqnorm(metaxa.meta$diversity_inverse_simpson)
# Create a list of pairwise comparisons
div.country <- levels(metaxa.meta$country)
country.pairs <- combn(seq_along(div.country), 2, simplify = FALSE, FUN = function(i)div.country[i])
print(country.pairs)
# Plot
## Shannon
p4 <- ggviolin(metaxa.meta, x = "country", y = "diversity_shannon",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"))
p4 <- p4 + stat_compare_means(comparisons = country.pairs, method = "wilcox.test")
print(p4)
## Gini Simpson
p5 <- ggviolin(metaxa.meta, x = "country", y = "diversity_gini_simpson",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"))
p5 <- p5 + stat_compare_means(comparisons = country.pairs, method = "wilcox.test")
print(p5)
# The probability that two individuals randomly selected from a sample will belong to same species is higher in Finland than in Benin.
## Inverse Simpson
p6 <- ggviolin(metaxa.meta, x = "country", y = "diversity_inverse_simpson",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"))
p6 <- p6 + stat_compare_means(comparisons = country.pairs, method = "t.test")
print(p6)
# The alpha diversity is the highest in Benin compared to Burkina Faso and Finland. Of Burkina Faso and Finland the diversity is higher in Burkina Faso.
# Load data
metaxa.com <- metaxa_PHY
taxic_metaxa <- as.data.frame(metaxa.com@tax_table)
# Add OTU ids
taxic_metaxa$OTU <- rownames(taxic_metaxa)
colnames(taxic_metaxa)
# Convert into a matrix.
taxmat_metaxa <- as.matrix(taxic_metaxa)
# Convert into phyloseq compatible file.
new.tax_metaxa <- tax_table(taxmat_metaxa)
# Incroporate into new phyloseq object
tax_table(metaxa.com) <- new.tax_metaxa
# Class level
metaxa_top6class <- aggregate_top_taxa(metaxa.com, top = 6, "Class")
metaxa_top6class.rel <- microbiome::transform(metaxa_top6class, "compositional")
metaxa_top6class.p13 <- plot_composition(metaxa_top6class.rel, group_by = "country") +
theme(legend.position = "bottom") + theme_classic() +
theme(axis.text.x = element_text(angle = 90, size = 8), axis.title = element_blank()) +
ggtitle("Relative abundance of top 6 classes, Metaxa2")
metaxa_top6class.p13 +
scale_fill_manual(values = c("#1B9E77","#D95F02","#7570B3","#E7298A","#66A61E","#E6AB02", "#FFFFFF"))
# Add OTU ids
taxic_metaxa$OTU <- rownames(taxic_metaxa)
colnames(taxic_metaxa)
# Convert into a matrix.
taxmat_metaxa <- as.matrix(taxic_metaxa)
# Convert into phyloseq compatible file.
new.tax_metaxa <- tax_table(taxmat_metaxa)
# Incroporate into new phyloseq object
tax_table(metaxa.com) <- new.tax_metaxa
# Class level
metaxa_top6class <- aggregate_top_taxa(metaxa.com, top = 6, "Class")
metaxa_top6class.rel <- microbiome::transform(metaxa_top6class, "compositional")
metaxa_top6class.p13 <- plot_composition(metaxa_top6class.rel, group_by = "country") +
theme(legend.position = "bottom") + theme_classic() +
theme(axis.text.x = element_text(angle = 90, size = 8), axis.title = element_blank()) +
ggtitle("Relative abundance of top 6 classes, Metaxa2")
metaxa_top6class.p13 +
scale_fill_manual(values = c("#1B9E77","#D95F02","#7570B3","#E7298A","#66A61E","#E6AB02", "#FFFFFF"))
metaxa_top6genus <- aggregate_top_taxa(metaxa.com, top = 6, "Genus")
metaxa_top6class <- aggregate_top_taxa(metaxa.com, top = 6, "Class")
metaxa_top6class.rel <- microbiome::transform(metaxa_top6class, "compositional")
metaxa_top6class.p13 <- plot_composition(metaxa_top6class.rel, group_by = "country") +
theme(legend.position = "bottom") + theme_classic() +
theme(axis.text.x = element_text(angle = 90, size = 8), axis.title = element_blank()) +
ggtitle("Relative abundance of top 6 classes, Metaxa2")
metaxa_top6class.p13 +
scale_fill_manual(values = c("#1B9E77","#D95F02","#7570B3","#E7298A","#66A61E","#E6AB02", "#FFFFFF"))
metaxa_heat <- format_to_besthit(metaxa_PHY)
heat.sample <- plot_taxa_heatmap(metaxa_heat, subset.top = 20,
VariableA = "country",
heatcolors = rev(brewer.pal(100, "Blues")),
transformation = "log10")
