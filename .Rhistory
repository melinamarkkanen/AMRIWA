tax_table_metaphlan <- data.frame(str_split_fixed(data.frame(metaphlan) [,1], ";", 7))
colnames(tax_table_metaphlan) <- c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")
# Clean "*__"
tax_table_metaphlan <- apply(tax_table_metaphlan, 2, function(y) (gsub(".__", "", y)))
# Combine into phyloseq object
metaphlan_PHY <- phyloseq(otu_table(OTU_metaphlan, taxa_are_rows = TRUE), tax_table(as.matrix(tax_table_metaphlan)), sample_data(metadata))
# Modify mapping output file "ARG_genemat.txt" in command line to match sample names in metadata file
## sed 's/BFH38-A_S156/BFH38.A_S156/g' ARG_genemat.txt > mod_ARG_genemat.txt
## sed -i 's/BFH38-B_S157/BFH38.B_S157/g' mod_ARG_genemat.txt
## sed -i 's/BH34-A_S98/BH34.A_S98/g' mod_ARG_genemat.txt
## sed -i 's/BH34-B_S99/BH34.B_S99/g' mod_ARG_genemat.txt
ARG_genemat <-as.matrix(read.table("mod_ARG_genemat.txt", header= T, check.names = F, row.names = 1))
# Save counts without gene names
#write.table(ARG_genemat, "~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/ARG_genemat_counts", row.names=T, sep = "\t", col.names = T)
#ARG_genemat_counts <- read.delim("~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/ARG_genemat_counts", row.names=NULL)
#ARG_genemat_counts$row.names<-NULL
ARG_genemat_norm <- t(t(ARG_genemat)/metadata$SSU_counts)
# Check if correct:
identical(ARG_genemat[2020, 4]/metadata$SSU_counts[10], ARG_genemat_norm[2020, 4])
# Save and load again to exclude row.names
write.table(ARG_genemat_norm, "~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/ARG_genemat_norm.txt", row.names=T, sep = "\t", col.names = T)
ARG_genemat_norm <- read.delim("~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/ARG_genemat_norm.txt", row.names=NULL)
ARG_genemat_norm$row.names<-NULL
# Create tax table
tax_table_resfinder <- read.csv("~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/tax_table_resfinder.txt", header=FALSE, sep=";")
colnames(tax_table_resfinder) <- c("Gene", "Class")
# Combine to phyloseq object
resfinder_PHY <- phyloseq(otu_table(ARG_genemat_norm, taxa_are_rows = TRUE), sample_data(metadata),
tax_table(as.matrix(tax_table_resfinder)))
# Have a quick look
plot_bar(otu_table(resfinder_PHY))
# There are the suspicious samples (BH02, BH27, BH30).
# With low quality (BFH24_S142, BH63_S118, FH10_S171)
resfinder_PHY = subset_samples(resfinder_PHY, name != "BFH24_S142" & name != "BH63_S118" & name != "FH10_S171")
# Feces samples (BH20_S88, BH22_S89, BH24_S90, BH25_S91)
resfinder_PHY_ww = subset_samples(resfinder_PHY, name!="BH20_S88" & name!="BH22_S89" & name!="BH24_S90" & name!="BH25_S91")
# Or alternatively include fecal but exclude suspicious samples
# resfinder_PHY_ast = subset_samples(resfinder_PHY, "BH02_S77" & name != "BH27_S92" & name != "BH30_S94")
# Suspicious samples (very high ARG level) (BH02_S77, BH27_S92, BH30_S94)
resfinder_PHY_clean = subset_samples(resfinder_PHY_ww, name != "BH02_S77" & name != "BH27_S92" & name != "BH30_S94")
# Check if there are taxa that are not present in any of the remaining samples
any(taxa_sums(resfinder_PHY_clean) == 0)
resfinder_PHY_clean <- prune_taxa(taxa_sums(resfinder_PHY_clean) > 0, resfinder_PHY_clean)
any(taxa_sums(resfinder_PHY_clean) == 0)
resfinder_PHY_Gene <- tax_glom(resfinder_PHY_clean, taxrank = "Gene")
minTotRelAbun = 1e-5
x = taxa_sums(resfinder_PHY_Gene)
keepTaxa = which((x / sum(x)) > minTotRelAbun)
prunedSet = prune_taxa(keepTaxa, resfinder_PHY_Gene)
library(phyloseq)
??prune_taxa
minTotRelAbun = 1e-5
x = taxa_sums(resfinder_PHY_Gene)
keepTaxa = which((x / sum(x)) > minTotRelAbun)
prunedSet = prune_taxa(keepTaxa, resfinder_PHY_Gene)
keepTaxa = taxa_names(resfinder_PHY_Gene)[which((x / sum(x)) > minTotRelAbun)]
View(keepTaxa)
View(resfinder_PHY_Gene)
resfinder_PHY_Gene <- tax_glom(resfinder_PHY_clean, taxrank = "Gene")
resfinder_PHY_Gene
minTotRelAbun = 1e-5
x = taxa_sums(resfinder_PHY_Gene)
keepTaxa = taxa_names(resfinder_PHY_Gene)[which((x / sum(x)) > minTotRelAbun)]
resfinder_PHY_Gene
resfinder_PHY_Gene_abund <- prune_taxa(names(sort(taxa_sums(resfinder_PHY_Gene), TRUE)[1:12]),
resfinder_PHY_Gene)
# Normalize by number of samples in each country
otu_table(resfinder_PHY_Gene_abund) <-   (otu_table(resfinder_PHY_Gene_abund)[,]/as.matrix(table(sample_data(resfinder_PHY_Gene_abund)$country))[, 1])
p18<-plot_bar(resfinder_PHY_Gene_abund, x="name", fill="Gene")
resfinder.p18 <- p18 + facet_grid(~ location, scales = "free", space = "free") +
ggtitle("Sum relative abundances of ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p18 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
keepTaxa
tax_table_resfinder
otu_table(resfinder_PHY)
keepTaxa
minTotRelAbun = 1e-5
x = taxa_sums(resfinder_PHY_Gene)
keepTaxa = (x / sum(x)) > minTotRelAbun
keepTaxa
prunedSet = prune_taxa(keepTaxa, resfinder_PHY_Gene)
View(resfinder_PHY_Gene)
resfinder_PHY_Gene <- tax_glom(resfinder_PHY_clean, taxrank = "Gene")
View(resfinder_PHY_Gene)
minTotRelAbun = 1e-5
x = taxa_sums(resfinder_PHY_Gene)
keepTaxa = taxa_names(resfinder_PHY_Gene)[which((x / sum(x)) > minTotRelAbun)]
prunedSet = prune_taxa(keepTaxa, resfinder_PHY_Gene, )
minTotRelAbun = 1e-5
x = taxa_sums(resfinder_PHY_Gene)
keepTaxa = taxa_names(resfinder_PHY_Gene)[which((x / sum(x)) > minTotRelAbun)]
prunedSet = prune_taxa(keepTaxa, resfinder_PHY_Gene)
View(resfinder_PHY_Gene) # 2365
View(prunedSet) # 2365
resfinder_PHY_Gene_rare <- prune_taxa(names(sort(taxa_sums(prunedSet), TRUE)[1:12]),
prunedSet)
# Normalize by number of samples in each country
otu_table(resfinder_PHY_Gene_rare) <-   (otu_table(resfinder_PHY_Gene_rare)[,]/as.matrix(table(sample_data(resfinder_PHY_Gene_rare)$country))[, 1])
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene")
resfinder.p20 <- p20 + facet_grid(~ location, scales = "free", space = "free") +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
minTotRelAbun = 1e-5
x = taxa_sums(resfinder_PHY_Gene)
keepTaxa = taxa_names(resfinder_PHY_Gene)[which((x / sum(x)) > minTotRelAbun)]
prunedSet = prune_taxa(keepTaxa, resfinder_PHY_Gene)
View(resfinder_PHY_Gene) # 2365
View(prunedSet) # 1359
View(prunedSet)
resfinder_PHY_Gene_rare <- prune_taxa(names(sort(taxa_sums(prunedSet), TRUE)[1:12]),
prunedSet)
View(resfinder_PHY_Gene_rare)
minTotRelAbun = 1e-5
x = taxa_sums(resfinder_PHY_Gene)
keepTaxa = taxa_names(resfinder_PHY_Gene)[which((x / sum(x)) < minTotRelAbun)]
prunedSet = prune_taxa(keepTaxa, resfinder_PHY_Gene)
View(resfinder_PHY_Gene) # 2365
View(prunedSet) # 1359
resfinder_PHY_Gene_rare <- prune_taxa(names(sort(taxa_sums(prunedSet), TRUE)[1:12]),
prunedSet)
View(resfinder_PHY_Gene_rare)
otu_table(resfinder_PHY_Gene_rare) <-   (otu_table(resfinder_PHY_Gene_rare)[,]/as.matrix(table(sample_data(resfinder_PHY_Gene_rare)$country))[, 1])
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene")
resfinder.p20 <- p20 + facet_grid(~ location, scales = "free", space = "free") +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
View(prunedSet)
View(resfinder_PHY_Gene)
View(prunedSet)
otu_table(prunedSet)
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene")
resfinder.p20 <- p20 + facet_grid(~ location, scales = "free", space = "free") +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank(),
strip.text.y = element_text(angle=0)) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
resfinder_PHY_Gene_rare <- subset_samples(resfinder_PHY_Gene_rare, sample_sums(resfinder_PHY_Gene_rare) !=
0)
otu_table(resfinder_PHY_Gene_rare) <-   (otu_table(resfinder_PHY_Gene_rare)[,]/as.matrix(table(sample_data(resfinder_PHY_Gene_rare)$country))[, 1])
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene")
resfinder.p20 <- p20 + facet_grid(~ location, scales = "free", space = "free") +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank())+
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene")
resfinder.p20 <- p20 + facet_grid(~ location, scales = "free", space = "free", switch = "y" ) +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank())+
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene")
resfinder.p20 <- p20 +
facet_grid(~ location, scales = "free", space = "free") +
facet_grid(facets = "y") +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene")
resfinder.p20 <- p20 +
facet_grid(~ location, scales = "free", space = "free") +
facet_grid(facets, switch = "y") +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene")
resfinder.p20 <- p20 +
facet_grid(~ location, scales = "free", space = "free", switch = "y") +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene")
resfinder.p20 <- p20 +
facet_grid(~ location, scales = "free", space = "free", switch = "x") +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene")
resfinder.p20 <- p20 +
facet_grid(~ location, scales = "free", space = "free", strip.position="right") +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene")
resfinder.p20 <- p20 +
facet_wrap(~ location, scales = "free", strip.position="right") +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene")
resfinder.p20 <- p20 +
facet_grid(~ location, scales = "free", space = "free") +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank(),
strip.text.x = element_text(size = 8, colour = "orange", angle = 90)) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene")
resfinder.p20 <- p20 +
facet_grid(~ location, scales = "free", space = "free") +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_minimal() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank(),
strip.text.x = element_text(size = 5, angle = 45)) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene")
resfinder.p20 <- p20 +
facet_grid(~ location, scales = "free", space = "free") +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_classic() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank(),
strip.text.x = element_text(size = 6, angle = 45, hjust = 1)) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene")
resfinder.p20 <- p20 +
facet_grid(~ location, scales = "free", space = "free") +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank(),
strip.text.x = element_text(size = 6, angle = 90, hjust = 1)) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene")
resfinder.p20 <- p20 +
facet_grid(~ location, scales = "free", space = "free", labeller = label_wrap_gen()) +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank(),
strip.text.x = element_text(size = 6, angle = 90, hjust = 0)) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene")
resfinder.p20 <- p20 +
facet_grid(~ location, scales = "free", space = "free", labeller = label_wrap_gen()) +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank(),
strip.text.x = element_text(size = 9, angle = 90, hjust = 0)) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack", size=0.5)
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack", size=0.5)
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack", width = 0.5)
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack", width = 0.5)
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack", width = 0.9)
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack", width = 0.3)
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene, width = 0.5), stat="identity", position="stack")
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene", width = 0.5)
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene", aes(x=x, y=y, width=.5))
resfinder.p20 <- p20 +
facet_grid(~ location, scales = "free", space = "free", labeller = label_wrap_gen()) +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank(),
strip.text.x = element_text(size = 9, angle = 90, hjust = 0)) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene", aes(width=.5))
resfinder.p20 <- p20 +
facet_grid(~ location, scales = "free", space = "free", labeller = label_wrap_gen()) +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank(),
strip.text.x = element_text(size = 9, angle = 90, hjust = 0)) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
p20<-plot_bar(resfinder_PHY_Gene_rare, x="name", fill="Gene")
resfinder.p20 <- p20 +
facet_grid(~ location, scales = "free", space = "free", labeller = label_wrap_gen()) +
ggtitle("Sum relative abundances of rare ARGs/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank(),
strip.text.x = element_text(size = 9, angle = 90, hjust = 0)) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p20 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
View(metadata)
testi <- tax_glom(resfinder_PHY_clean, "Class")
heat.testi <- plot_taxa_heatmap(testi,
subset.top = 50,
VariableA = "country",
heatcolors = rev(brewer.pal(12, "GnBu")),
transformation = "log10",
cluster_cols = T)
suppressPackageStartupMessages(library(curatedMetagenomicData))
install.packages("curatedMetagenomicData")
dds.data = phyloseq_to_deseq2(resfinder_PHY_clean, ~country)
resfinder_PHY_clean
ARG_genemat <-as.matrix(read.table("mod_ARG_genemat.txt", header= T, check.names = F, row.names = 1))
setwd("~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles")
ARG_genemat <-as.matrix(read.table("mod_ARG_genemat.txt", header= T, check.names = F, row.names = 1))
# Load data
metaxa_genus <- read.delim("~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/metaxa_genus.txt")
# Create OTU table
OTU_metaxa <- metaxa_genus[,-1]
# Create tax table
tax_table_metaxa <- data.frame(str_split_fixed(data.frame(metaxa_genus) [,1], ";", 6))
colnames(tax_table_metaxa) <- c("Domain", "Phylum", "Class", "Order", "Family", "Genus")
# Combine into phyloseq object
metaxa_PHY <- phyloseq(otu_table(OTU_metaxa, taxa_are_rows=TRUE),
tax_table(as.matrix(tax_table_metaxa)), sample_data(metadata))
# Exclude Unknown
metaxa_PHY <- subset_taxa(metaxa_PHY, !Domain %in% c("Unknown"))
# Modify mapping output file "ARG_genemat.txt" in command line to match sample names in metadata file
## sed 's/BFH38-A_S156/BFH38.A_S156/g' ARG_genemat.txt > mod_ARG_genemat.txt
## sed -i 's/BFH38-B_S157/BFH38.B_S157/g' mod_ARG_genemat.txt
## sed -i 's/BH34-A_S98/BH34.A_S98/g' mod_ARG_genemat.txt
## sed -i 's/BH34-B_S99/BH34.B_S99/g' mod_ARG_genemat.txt
ARG_genemat <-as.matrix(read.table("mod_ARG_genemat.txt", header= T, check.names = F, row.names = 1))
# Save counts without gene names
#write.table(ARG_genemat, "~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/ARG_genemat_counts", row.names=T, sep = "\t", col.names = T)
#ARG_genemat_counts <- read.delim("~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/ARG_genemat_counts", row.names=NULL)
#ARG_genemat_counts$row.names<-NULL
resfinder_PHY_testi <- phyloseq(otu_table(ARG_genemat, taxa_are_rows = TRUE), sample_data(metadata),
tax_table(as.matrix(tax_table_resfinder)))
write.table(ARG_genemat, "~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/ARG_genemat_counts", row.names=T, sep = "\t", col.names = T)
ARG_genemat_counts <- read.delim("~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/ARG_genemat_counts", row.names=NULL)
ARG_genemat_counts$row.names<-NULL
resfinder_PHY_nonnorm <- phyloseq(otu_table(ARG_genemat_counts, taxa_are_rows = TRUE), sample_data(metadata),
tax_table(as.matrix(tax_table_resfinder)))
dds.data = phyloseq_to_deseq2(resfinder_PHY_nonnorm, ~country)
dds = DESeq(dds.data)
library(DESeq2)
dds = DESeq(dds.data)
res = results(dds)
res = res[order(res$padj, na.last=NA), ]
alpha = 0.01
sigtab = res[(res$padj < alpha), ]
sigtab = cbind(as(sigtab, "data.frame"),
as(tax_table(resfinder_PHY_nonnorm)[rownames(sigtab), ], "matrix"))
head(sigtab)
resfinder_PHY_nonnorm = subset_samples(resfinder_PHY_nonnorm, name != "BFH24_S142" & name != "BH63_S118" & name != "FH10_S171")
resfinder_PHY_nonnorm_ww = subset_samples(resfinder_PHY_nonnorm, name!="BH20_S88" & name!="BH22_S89" & name!="BH24_S90" & name!="BH25_S91")
resfinder_PHY_nonnorm = subset_samples(resfinder_PHY_nonnorm, name != "BFH24_S142" & name != "BH63_S118" & name != "FH10_S171")
# Feces samples (BH20_S88, BH22_S89, BH24_S90, BH25_S91)
resfinder_PHY_nonnorm_ww = subset_samples(resfinder_PHY_nonnorm, name!="BH20_S88" & name!="BH22_S89" & name!="BH24_S90" & name!="BH25_S91")
# Or alternatively include fecal but exclude suspicious samples
# resfinder_PHY_ast = subset_samples(resfinder_PHY, "BH02_S77" & name != "BH27_S92" & name != "BH30_S94")
# Suspicious samples (very high ARG level) (BH02_S77, BH27_S92, BH30_S94)
resfinder_PHY_nonnorm_clean = subset_samples(resfinder_PHY_nonnorm_ww, name != "BH02_S77" & name != "BH27_S92" & name != "BH30_S94")
# Check if there are taxa that are not present in any of the remaining samples
any(taxa_sums(resfinder_PHY_nonnorm_clean) == 0)
resfinder_PHY_nonnorm_clean <- prune_taxa(taxa_sums(resfinder_PHY_nonnorm_clean) > 0, resfinder_PHY_nonnorm_clean)
any(taxa_sums(resfinder_PHY_nonnorm_clean) == 0)
# Deseq
dds.data = phyloseq_to_deseq2(resfinder_PHY_nonnorm_clean, ~location)
dds = DESeq(dds.data)
res = results(dds)
res = res[order(res$padj, na.last=NA), ]
alpha = 0.01
sigtab = res[(res$padj < alpha), ]
sigtab = cbind(as(sigtab, "data.frame"),
as(tax_table(resfinder_PHY_nonnorm_clean)[rownames(sigtab), ], "matrix"))
head(sigtab)
resfinder_PHY_betalactams = subset_taxa(resfinder_PHY_clean, Class=="Betalactam")
resfinder_PHY_betalactams_Gene <- tax_glom(resfinder_PHY_betalactams, "Gene")
# Top12
resfinder_PHY_betalactams_Gene_abund <- prune_taxa(names(sort(taxa_sums(resfinder_PHY_betalactams_Gene), TRUE)[1:12]), resfinder_PHY_betalactams_Gene)
# Remove samples with none of these
resfinder_PHY_betalactams_Gene_abund <- subset_samples(resfinder_PHY_betalactams_Gene_abund, sample_sums(resfinder_PHY_betalactams_Gene_abund) !=
0)
# Normalize by sample number in each country
otu_table(resfinder_PHY_betalactams_Gene_abund) <- (otu_table(resfinder_PHY_betalactams_Gene_abund)[, ]/as.matrix(table(sample_data(resfinder_PHY_betalactams_Gene_abund)$country))[,
1])
p19<-plot_bar(resfinder_PHY_betalactams_Gene_abund, x="name", fill="Gene")
resfinder.p19 <- p19 + facet_grid(~ location, scales = "free", space = "free", labeller = label_wrap_gen()) +
ggtitle("Sum of relative abundances of top 12 betalactams/16S") +
theme_linedraw() +
theme(axis.text.x = element_text(angle=90, hjust=1, size = 8),
axis.title.x = element_blank(),
strip.text.x = element_text(size = 9, angle = 90, hjust = 0)) +
guides(fill = guide_legend(label.theme = element_text(size = 7), keywidth = 1.2, keyheight = 1.2))
# Remove OTU separators
resfinder.p19 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
resfinder.p19 + geom_bar(aes(color=Gene, fill=Gene), stat="identity", position="stack")
dds.data = phyloseq_to_deseq2(resfinder_PHY_nonnorm_clean, ~country)
dds = DESeq(dds.data)
res = results(dds)
res = res[order(res$padj, na.last=NA), ]
alpha = 0.01
sigtab = res[(res$padj < alpha), ]
sigtab = cbind(as(sigtab, "data.frame"),
as(tax_table(resfinder_PHY_nonnorm_clean)[rownames(sigtab), ], "matrix"))
head(sigtab)
dds <- estimateSizeFactors(dds)
dds <- estimateDispersions(dds)
plotDispEsts(dds)
theme_set(theme_bw())
sigtabgen = subset(sigtab, !is.na(Family))
theme_set(theme_bw())
sigtabgen = subset(sigtab, !is.na(Class))
theme_set(theme_bw())
sigtabgen = subset(sigtab, !is.na(Gene))
head(sigtab)
theme_set(theme_bw())
sigtabgen = subset(sigtab, !is.na(Gene))
x = tapply(sigtabgen$log2FoldChange, sigtabgen$Phylum, function(x) max(x))
theme_set(theme_bw())
sigtabgen = subset(sigtab, !is.na(Gene))
x = tapply(sigtabgen$log2FoldChange, sigtabgen$Gene, function(x) max(x))
x = sort(x, TRUE)
sigtabgen$Gene = factor(as.character(sigtabgen$Gene), levels=names(x))
ggplot(sigtabgen, aes(y=Gene, x=log2FoldChange, color=Gene)) +
geom_vline(xintercept = 0.0, color = "gray", size = 0.5) +
geom_point(size=6) +
theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust=0.5))
theme_set(theme_bw())
sigtabgen = subset(sigtab, !is.na(Class))
x = tapply(sigtabgen$log2FoldChange, sigtabgen$Gene, function(x) max(x))
x = sort(x, TRUE)
sigtabgen$Class = factor(as.character(sigtabgen$Class), levels=names(x))
ggplot(sigtabgen, aes(y=Class, x=log2FoldChange, color=Class)) +
geom_vline(xintercept = 0.0, color = "gray", size = 0.5) +
geom_point(size=6) +
theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust=0.5))
ggplot(sigtabgen, aes(y=Gene, x=log2FoldChange, color=Class)) +
geom_vline(xintercept = 0.0, color = "gray", size = 0.5) +
geom_point(size=6) +
theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust=0.5))
theme_set(theme_bw())
sigtabgen = subset(sigtab, !is.na(Family))
theme_set(theme_bw())
sigtabgen = subset(sigtab, !is.na(Gene))
# Class order
x = tapply(sigtabgen$log2FoldChange, sigtabgen$Class, function(x) max(x))
x = sort(x, TRUE)
sigtabgen$Class = factor(as.character(sigtabgen$Class), levels=names(x))
# Gene order
x = tapply(sigtabgen$log2FoldChange, sigtabgen$Gene, function(x) max(x))
x = sort(x, TRUE)
sigtabgen$Gene = factor(as.character(sigtabgen$Gene), levels=names(x))
ggplot(sigtabgen, aes(y=Gene, x=log2FoldChange, color=Class)) +
geom_vline(xintercept = 0.0, color = "gray", size = 0.5) +
geom_point(size=6) +
theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust=0.5))
p <- ggplot(sigtabgen, aes(y=Gene, x=log2FoldChange, color=Class)) +
geom_vline(xintercept = 0.0, color = "gray", size = 0.5) +
geom_point(size=6) +
theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust=0.5))
p
