metaphlan.meta$diversity_shannon <- metaphlan_tab$diversity_shannon
# Check whether the distribution of the diversity is normal
hist(metaphlan.meta$diversity_shannon)
shapiro.test(metaphlan.meta$diversity_shannon) # Does not fit the assumption of normal distribution > wilcox test.
qqnorm(metaphlan.meta$diversity_shannon)
# Plot
p7 <- ggviolin(metaphlan.meta, x = "country", y = "diversity_shannon",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"))
p7 <- p7 + stat_compare_means(comparisons = country.pairs, method = "wilcox.test")
print(p7)
# Gini Simpson
## Take a look at the indexes
metaphlan_tab <-microbiome::alpha(metaphlan_PHY, index = "diversity_gini_simpson")
kable(head(metaphlan_tab))
## Add indexes to data table
metaphlan.meta$diversity_gini_simpson <- metaphlan_tab$diversity_gini_simpson
# Check whether the distribution of the diversity is normal
hist(metaphlan.meta$diversity_gini_simpson)
shapiro.test(metaphlan.meta$diversity_gini_simpson) # Does not fit the assumption of normal distribution > wilcox test.
qqnorm(metaphlan.meta$diversity_gini_simpson)
# Plot
p8 <- ggviolin(metaphlan.meta, x = "country", y = "diversity_gini_simpson",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"))
p8 <- p11 + stat_compare_means(comparisons = country.pairs, method = "wilcox.test")
print(p8)
# Inverse Simpson
## Take a look at the indexes
metaphlan_tab <-microbiome::alpha(metaphlan_PHY, index = "diversity_inverse_simpson")
kable(head(metaphlan_tab))
## Add indexes to data table
metaphlan.meta$diversity_inverse_simpson <- metaphlan_tab$diversity_inverse_simpson
# Check whether the distribution of the diversity is normal
hist(metaphlan.meta$diversity_inverse_simpson)
shapiro.test(metaphlan.meta$diversity_inverse_simpson)
qqnorm(metaphlan.meta$diversity_inverse_simpson)
# Plot
p9 <- ggviolin(metaphlan.meta, x = "country", y = "diversity_inverse_simpson",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"))
p9 <- p9 + stat_compare_means(comparisons = country.pairs, method = "t.test")
print(p9)
# Shannon
## Take a look at the indexes
resfinder_tab <-microbiome::alpha(resfinder_PHY, index = "diversity_shannon")
kable(head(resfinder_tab))
## Create data table
resfinder.meta <- meta(resfinder_PHY)
kable(head(resfinder.meta))
## Add indexes to data table
resfinder.meta$diversity_shannon <- resfinder_tab$diversity_shannon
# Check whether the distribution of the diversity is normal
hist(resfinder.meta$diversity_shannon)
shapiro.test(resfinder.meta$diversity_shannon) # Does not fit the assumption of normal distribution > wilcox test.
qqnorm(resfinder.meta$diversity_shannon)
# Plot
p10 <- ggviolin(resfinder.meta, x = "country", y = "diversity_shannon",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"))
p10 <- p10 + stat_compare_means(comparisons = country.pairs, method = "wilcox.test")
print(p10)
# Gini Simpson
## Take a look at the indexes
resfinder_tab <-microbiome::alpha(resfinder_PHY, index = "diversity_gini_simpson")
kable(head(resfinder_tab))
## Add indexes to data table
resfinder.meta$diversity_gini_simpson <- resfinder_tab$diversity_gini_simpson
# Check whether the distribution of the diversity is normal
hist(resfinder.meta$diversity_gini_simpson)
shapiro.test(resfinder.meta$diversity_gini_simpson) # Does not fit the assumption of normal distribution > wilcox test.
qqnorm(resfinder.meta$diversity_gini_simpson)
# Plot
p11 <- ggviolin(resfinder.meta, x = "country", y = "diversity_gini_simpson",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"))
p11 <- p11 + stat_compare_means(comparisons = country.pairs, method = "wilcox.test")
print(p11)
# The outlier sample here is FH6-S167
# Inverse Simpson
## Take a look at the indexes
resfinder_tab <-microbiome::alpha(resfinder_PHY, index = "diversity_inverse_simpson")
kable(head(resfinder_tab))
## Add indexes to data table
resfinder.meta$diversity_inverse_simpson <- resfinder_tab$diversity_inverse_simpson
# Check whether the distribution of the diversity is normal
hist(resfinder.meta$diversity_inverse_simpson)
shapiro.test(resfinder.meta$diversity_inverse_simpson)
qqnorm(resfinder.meta$diversity_inverse_simpson)
# Plot
p12 <- ggviolin(resfinder.meta, x = "country", y = "diversity_inverse_simpson",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"))
p12 <- p12 + stat_compare_means(comparisons = country.pairs, method = "t.test")
print(p12)
# The alpha diversity of resistance genes detected by ResFinder seems slightly higher in Burkina Faso than in Benin and in Finland.
p8 <- ggviolin(metaphlan.meta, x = "country", y = "diversity_gini_simpson",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"), shape = "name")
p8 <- p11 + stat_compare_means(comparisons = country.pairs, method = "wilcox.test")
print(p8)
p8 <- ggviolin(metaphlan.meta, x = "country", y = "diversity_gini_simpson", shape = "name",
add = "boxplot", fill = "country", palette = c("#FF333F", "#35E0F5", "#531592"))
p8 <- p11 + stat_compare_means(comparisons = country.pairs, method = "wilcox.test")
print(p8)
p8 <- ggviolin(metaphlan.meta, x = "country", y = "diversity_gini_simpson",
add = "boxplot", fill = "country", shape = "name", palette = c("#FF333F", "#35E0F5", "#531592"))
p8 <- p11 + stat_compare_means(comparisons = country.pairs, method = "wilcox.test")
print(p8)
# Load data
metaphlan.com <- metaphlan_PHY
taxic_metaphlan <- as.data.frame(metaphlan.com@tax_table)
# Add OTU ids
taxic_metaphlan$OTU <- rownames(taxic_metaphlan)
colnames(taxic_metaphlan)
# Convert into a matrix.
taxmat_metaphlan <- as.matrix(taxic_metaphlan)
# Convert into phyloseq compatible file.
new.tax_metaphlan <- tax_table(taxmat_metaphlan)
# Incroporate into new phyloseq object
tax_table(metaphlan.com) <- new.tax_metaphlan
# Class level
metaphlan_top6class <- aggregate_top_taxa(metaphlan.com, top = 6, "Class")
metaphlan.com <- metaphlan_PHY
taxic_metaphlan <- as.data.frame(metaphlan.com@tax_table)
taxic_metaphlan$OTU <- rownames(taxic_metaphlan)
colnames(taxic_metaphlan)
taxmat_metaphlan <- as.matrix(taxic_metaphlan)
new.tax_metaphlan <- tax_table(taxmat_metaphlan)
tax_table(metaphlan.com) <- new.tax_metaphlan
metaphlan_top6class <- aggregate_top_taxa(metaphlan.com, top = 6, "Class")
metaphlan_top6genus <- aggregate_top_taxa(metaphlan.com, top = 6, "Genus")
metaphlan_top6class <- aggregate_top_taxa(metaphlan.com, top = 6, "Class")
View(metaphlan.com)
View(tax_table(metaphlan.com))
metaphlan_PHY_genus <- tax_glom(metaphlan_PHY, "Genus")
metaphlan_PHY_genus_abun <- prune_taxa(names(sort(taxa_sums(metaphlan_PHY_genus), TRUE)[1:12]),
metaphlan_PHY_genus)
# Transform_1
metaphlan_PHY_genus_abun_trans <- transform_sample_counts(metaphlan_PHY_genus_abun, function(x) x / sum(x))
# Merge by location
mrg_loc <- merge_samples(metaxa_PHY_genus_abun_trans, "location")
# Transform_2
mrg_loc_trans <- transform_sample_counts(mrg_loc, function(x) x / sum(x))
# Normalize by sample number / location
otu_table(mrg_loc_trans) <- otu_table(mrg_loc_trans)[, ]/as.matrix(table(sample_data(metaxa_PHY)$location))[,
1]
# Set colors
nb.cols <- 12
mycolors <- colorRampPalette(brewer.pal(8, "Dark2"))(nb.cols)
# Facet labs
country.labs <- c("1" = "Benin", "2" = "Burkina Faso", "3" = "Finland")
# Plot
metaphlan.p16 <- plot_bar(mrg_loc_trans, fill = "Genus", title = "12 most abundant genera") +
facet_grid(~country, scales = "free_x", space = "free_x", labeller = labeller(country = country.labs)) +
theme_classic() +
theme(axis.text.x = element_text(angle=75, hjust=1, size = 10),
axis.title.x = element_blank()) +
ylab("Relative abundance (%)") + xlab("") +
scale_fill_manual(values=mycolors) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.8, keyheight = 1.8, title = "Genus"))
metaphlan.p16
plot_grid(metaxa.p14, metaphlan.p16)
# Modify data in command-line to match sample names in metadata file
## tr '|' ';' <merged_abundance_table.txt > mod_merged_abundance_table.txt
## sed -i 's/_profile//g' mod_merged_abundance_table.txt
## sed -i 's/BFH38-A_S156/BFH38.A_S156/g' mod_merged_abundance_table.txt
## sed -i 's/BFH38-B_S157/BFH38.B_S157/g' mod_merged_abundance_table.txt
## sed -i 's/BH34-A_S98/BH34.A_S98/g' mod_merged_abundance_table.txt
## sed -i 's/BH34-B_S99/BH34.B_S99/g' mod_merged_abundance_table.txt
# Load data
metaphlan <- as.matrix(read.table("mod_merged_abundance_table.txt", fill = 1, header = T, check.names = F))
# Exclude the first column "NCBI_tax_id"
metaphlan <- subset(metaphlan, select = -c(NCBI_tax_id))
# Create OTU table
OTU_metaphlan <- metaphlan[,-1]
# Change values as numeric
class(OTU_metaphlan) <- "numeric"
# Create tax_table
tax_table_metaphlan <- data.frame(str_split_fixed(data.frame(metaphlan) [,1], ";", 7))
colnames(tax_table_metaphlan) <- c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")
# Clean "*__"
tax_table_metaphlan <- apply(tax_table_metaphlan, 2, function(y) (gsub(".__", "", y)))
# Combine into phyloseq object
metaphlan_PHY <- phyloseq(otu_table(OTU_metaphlan, taxa_are_rows = TRUE), tax_table(as.matrix(tax_table_metaphlan)), sample_data(metadata))
# Virus
metaphlan_PHY <- subset_taxa(metaphlan_PHY, Kingdom != "Virus")
# With low quality (BFH24_S142, BH63_S118, FH10_S171)
metaphlan_PHY = subset_samples(metaphlan_PHY, name != "BFH24_S142" & name != "BH63_S118" & name != "FH10_S171")
# Feces samples (BH20_S88, BH22_S89, BH24_S90, BH25_S91)
metaphlan_PHY_ww = subset_samples(metaphlan_PHY, name!="BH20_S88" & name!="BH22_S89" & name!="BH24_S90" & name!="BH25_S91")
# Clear taxa that is not present in any of the remaining samples
any(taxa_sums(metaphlan_PHY_ww) == 0)
metaxa_PHY <- prune_taxa(taxa_sums(metaphlan_PHY_ww) > 0, metaphlan_PHY_ww)
any(taxa_sums(metaphlan_PHY) == 0)
metaphlan_PHY_genus <- tax_glom(metaphlan_PHY, "Genus")
metaphlan_PHY_genus_abun <- prune_taxa(names(sort(taxa_sums(metaphlan_PHY_genus), TRUE)[1:12]),
metaphlan_PHY_genus)
# Transform_1
metaphlan_PHY_genus_abun_trans <- transform_sample_counts(metaphlan_PHY_genus_abun, function(x) x / sum(x))
# Merge by location
metaphlan_mrg_loc <- merge_samples(metaxa_PHY_genus_abun_trans, "location")
# Transform_2
metaphlan_mrg_loc_trans <- transform_sample_counts(metaphlan_mrg_loc, function(x) x / sum(x))
# Normalize by sample number / location
otu_table(metaphlan_mrg_loc_trans) <- otu_table(metaphlan_mrg_loc_trans)[, ]/as.matrix(table(sample_data(metaxa_PHY)$location))[,
1]
# Set colors
nb.cols <- 12
mycolors <- colorRampPalette(brewer.pal(8, "Dark2"))(nb.cols)
# Facet labs
country.labs <- c("1" = "Benin", "2" = "Burkina Faso", "3" = "Finland")
# Plot
metaphlan.p16 <- plot_bar(metaphlan_mrg_loc_trans, fill = "Genus", title = "12 most abundant genera") +
facet_grid(~country, scales = "free_x", space = "free_x", labeller = labeller(country = country.labs)) +
theme_classic() +
theme(axis.text.x = element_text(angle=75, hjust=1, size = 10),
axis.title.x = element_blank()) +
ylab("Relative abundance (%)") + xlab("") +
scale_fill_manual(values=mycolors) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.8, keyheight = 1.8, title = "Genus"))
metaphlan.p16
metaxa_PHY_genus <- tax_glom(metaxa_PHY, "Genus")
metaxa_PHY_genus_abun <- prune_taxa(names(sort(taxa_sums(metaxa_PHY_genus), TRUE)[1:12]),
metaxa_PHY_genus)
# Transform_1
metaxa_PHY_genus_abun_trans <- transform_sample_counts(metaxa_PHY_genus_abun, function(x) x / sum(x))
# Merge by location
metaxa_mrg_loc <- merge_samples(metaxa_PHY_genus_abun_trans, "location")
# Transform_2
metaxa_mrg_loc_trans <- transform_sample_counts(metaxa_mrg_loc, function(x) x / sum(x))
# Normalize by sample number / location
otu_table(metaxa_mrg_loc_trans) <- otu_table(metaxa_mrg_loc_trans)[, ]/as.matrix(table(sample_data(metaxa_PHY)$location))[,
1]
# Set colors
nb.cols <- 12
mycolors <- colorRampPalette(brewer.pal(8, "Dark2"))(nb.cols)
# Facet labs
country.labs <- c("1" = "Benin", "2" = "Burkina Faso", "3" = "Finland")
# Plot
metaxa.p14 <- plot_bar(metaxa_mrg_loc_trans, fill = "Genus", title = "12 most abundant genera") +
facet_grid(~country, scales = "free_x", space = "free_x", labeller = labeller(country = country.labs)) +
theme_classic() +
theme(axis.text.x = element_text(angle=75, hjust=1, size = 10),
axis.title.x = element_blank()) +
ylab("Relative abundance (%)") + xlab("") +
scale_fill_manual(values=mycolors) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.8, keyheight = 1.8, title = "Genus"))
metaxa.p14
plot_grid(metaxa.p14, metaphlan.p16)
nb.cols <- 12
mycolors <- colorRampPalette(brewer.pal(8, "Accent"))(nb.cols)
# Facet labs
country.labs <- c("1" = "Benin", "2" = "Burkina Faso", "3" = "Finland")
# Plot
metaxa.p14 <- plot_bar(metaxa_mrg_loc_trans, fill = "Genus", title = "12 most abundant genera") +
facet_grid(~country, scales = "free_x", space = "free_x", labeller = labeller(country = country.labs)) +
theme_classic() +
theme(axis.text.x = element_text(angle=75, hjust=1, size = 10),
axis.title.x = element_blank()) +
ylab("Relative abundance (%)") + xlab("") +
scale_fill_manual(values=mycolors) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.8, keyheight = 1.8, title = "Genus"))
nb.cols <- 12
mycolors <- colorRampPalette(brewer.pal(8, "Accent"))(nb.cols)
# Facet labs
country.labs <- c("1" = "Benin", "2" = "Burkina Faso", "3" = "Finland")
# Plot
metaphlan.p16 <- plot_bar(metaphlan_mrg_loc_trans, fill = "Genus", title = "12 most abundant genera") +
facet_grid(~country, scales = "free_x", space = "free_x", labeller = labeller(country = country.labs)) +
theme_classic() +
theme(axis.text.x = element_text(angle=75, hjust=1, size = 10),
axis.title.x = element_blank()) +
ylab("Relative abundance (%)") + xlab("") +
scale_fill_manual(values=mycolors) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.8, keyheight = 1.8, title = "Genus"))
plot_grid(metaxa.p14, metaphlan.p16)
plot_grid(metaxa.p14, metaphlan.p16)
mycolors <- colorRampPalette(brewer.pal(8, "Pastel1"))(nb.cols)
# Facet labs
country.labs <- c("1" = "Benin", "2" = "Burkina Faso", "3" = "Finland")
# Plot
metaphlan.p16 <- plot_bar(metaphlan_mrg_loc_trans, fill = "Genus", title = "12 most abundant genera") +
facet_grid(~country, scales = "free_x", space = "free_x", labeller = labeller(country = country.labs)) +
theme_classic() +
theme(axis.text.x = element_text(angle=75, hjust=1, size = 10),
axis.title.x = element_blank()) +
ylab("Relative abundance (%)") + xlab("") +
scale_fill_manual(values=mycolors) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.8, keyheight = 1.8, title = "Genus"))
metaphlan.p16
metaphlan.p16
nb.cols <- 12
mycolors <- colorRampPalette(brewer.pal(12, "Paired"))(nb.cols)
# Facet labs
country.labs <- c("1" = "Benin", "2" = "Burkina Faso", "3" = "Finland")
# Plot
metaphlan.p16 <- plot_bar(metaphlan_mrg_loc_trans, fill = "Genus", title = "12 most abundant genera") +
facet_grid(~country, scales = "free_x", space = "free_x", labeller = labeller(country = country.labs)) +
theme_classic() +
theme(axis.text.x = element_text(angle=75, hjust=1, size = 10),
axis.title.x = element_blank()) +
ylab("Relative abundance (%)") + xlab("") +
scale_fill_manual(values=mycolors) +
guides(fill = guide_legend(label.theme = element_text(size = 8), keywidth = 1.8, keyheight = 1.8, title = "Genus"))
metaphlan.p16
metaphlan.p16
metaphlan_top6class <- aggregate_top_taxa(metaphlan.com, top = 6, "Class")
metaxa_top6class <- aggregate_top_taxa(metaxa.com, top = 6, "Class")
metaphlan_top6class <- aggregate_top_taxa(metaphlan.com, top = 6, "Class")
heat.sample <- plot_taxa_heatmap(metaxa_PHY,
subset.top = 50,
taxonomic.level = "Genus",
VariableA = "country",
heatcolors = rev(brewer.pal(12, "GnBu")),
transformation = "log10",
cluster_cols = F)
heat.sample2 <- plot_taxa_heatmap(metaxa_PHY_genus_abun_trans,
subset.top = 50,
taxonomic.level = "Genus",
VariableA = "country",
heatcolors = rev(brewer.pal(12, "GnBu")),
cluster_cols = F)
??plot_taxa_heatmap
heat.sample2 <- plot_taxa_heatmap(metaxa_PHY_genus_abun_trans,
subset.top = 50,
taxonomic.level = "Genus",
VariableA = "country",
heatcolors = rev(brewer.pal(12, "GnBu")),
transformation = "NA",
cluster_cols = F)
heat.sample <- plot_taxa_heatmap(metaxa_PHY,
subset.top = 50,
taxonomic.level = "Genus",
VariableA = "country",
heatcolors = rev(brewer.pal(12, "GnBu")),
transformation = "log10",
cluster_cols = F)
heat.sample2 <- plot_taxa_heatmap(metaxa_PHY_genus_abun_trans,
subset.top = 50,
taxonomic.level = "Genus",
VariableA = "country",
heatcolors = rev(brewer.pal(12, "GnBu")),
transformation = "compositional",
cluster_cols = F)
plot_grid(heat.sample, heat.sample2)
heat.sample <- plot_taxa_heatmap(metaxa_PHY,
subset.top = 50,
taxonomic.level = "Genus",
VariableA = "country",
heatcolors = rev(brewer.pal(12, "GnBu")),
transformation = "log10",
cluster_cols = F)
heat.sample
heat.sample <- plot_taxa_heatmap(metaxa_PHY_genus,
subset.top = 50,
VariableA = "country",
heatcolors = rev(brewer.pal(12, "GnBu")),
transformation = "log10",
cluster_cols = F)
heat.sample
heat.sample
heat.sample <- plot_taxa_heatmap(metaxa_PHY_genus,
subset.top = 50,
VariableA = "country",
heatcolors = rev(brewer.pal(12, "GnBu")),
transformation = "log10",
cluster_cols = T)
heat.sample
??plot_taxa_heatmap
pheatmap(
mat               = log10(heat.sample),
color             = inferno(10),
border_color      = NA,
show_colnames     = FALSE,
show_rownames     = FALSE,
annotation_col    = mat_col,
annotation_colors = mat_colors,
drop_levels       = TRUE,
fontsize          = 14,
main              = "Log10 Transformed Values"
)
pheatmap(
mat               = log10(metaxa_PHY_genus),
color             = inferno(10),
border_color      = NA,
show_colnames     = FALSE,
show_rownames     = FALSE,
annotation_col    = mat_col,
annotation_colors = mat_colors,
drop_levels       = TRUE,
fontsize          = 14,
main              = "Log10 Transformed Values"
)
heat.sample <- plot_taxa_heatmap(metaxa_PHY_genus,
subset.top = 50,
VariableA = "country",
heatcolors = rev(brewer.pal(12, "GnBu")),
transformation = "log10",
cluster_cols = T)
heat.sample
heat.sample <- plot_taxa_heatmap(metaxa_PHY_genus,
subset.top = 50,
VariableA = "country",
heatcolors = rev(brewer.pal(12, "GnBu")),
transformation = "log10",
cluster_cols = F)
heat.sample <- plot_taxa_heatmap(metaxa_PHY_genus,
subset.top = 50,
VariableA = "country",
heatcolors = rev(brewer.pal(12, "GnBu")),
transformation = "log10",
cluster_cols = T)
heat.sample
heat.sample + pheatmap(cluster_rows = F)
heat.metaphlan <- plot_taxa_heatmap(metaphlan_PHY_genus,
subset.top = 50,
VariableA = "country",
heatcolors = rev(brewer.pal(12, "GnBu")),
transformation = "log10",
cluster_cols = T)
heat.metaphlan + pheatmap(cluster_rows = F)
plot_grid(heat.metaphlan, heat.sample)
heat.metaxa <- plot_taxa_heatmap(metaxa_PHY_genus,
subset.top = 50,
VariableA = "country",
heatcolors = rev(brewer.pal(12, "GnBu")),
transformation = "log10",
cluster_cols = T)
heat.metaxa
heat.metaphlan <- plot_taxa_heatmap(metaphlan_PHY_genus,
subset.top = 50,
VariableA = "country",
heatcolors = rev(brewer.pal(12, "GnBu")),
transformation = "log10",
cluster_cols = T)
heat.metaphlan
heat.metaxa <- plot_taxa_heatmap(metaxa_PHY_genus,
subset.top = 50,
VariableA = "country",
heatcolors = rev(brewer.pal(12, "GnBu")),
transformation = "log10",
cluster_cols = T)
heat.metaxa
heat.metaphlan <- plot_taxa_heatmap(metaphlan_PHY_genus,
subset.top = 50,
VariableA = "country",
heatcolors = rev(brewer.pal(12, "GnBu")),
transformation = "log10",
cluster_cols = T)
heat.metaphlan
heat.metaphlan
heat.metaphlan <- plot_taxa_heatmap(metaphlan_PHY_genus,
subset.top = 50,
VariableA = "country",
VariableB = "location",
heatcolors = rev(brewer.pal(12, "GnBu")),
transformation = "log10",
cluster_cols = T)
heat.metaphlan
heat.metaphlan
metaxa_box <- plot_taxa_boxplot(metaxa_PHY_genus_abun,
taxonomic.level = "Genus",
top.otu = 12, VariableA = "country",
title = "Relative abudance plot", color = "Dark2")
metaphlan_box <- plot_taxa_boxplot(metaphlan_PHY_genus_abun,
taxonomic.level = "Genus",
top.otu = 12, VariableA = "country",
title = "Relative abudance plot", color = "Dark2")
metaxa_PHY_genus_abun <- prune_taxa(names(sort(taxa_sums(metaxa_PHY_genus), TRUE)[1:12]),
metaxa_PHY_genus)
metaxa_box <- plot_taxa_boxplot(metaxa_PHY_genus_abun,
taxonomic.level = "Genus",
top.otu = 12, VariableA = "country",
title = "Relative abudance plot", color = "Dark2")
View(metaxa_PHY_genus_abun)
metaxa_box <- plot_taxa_boxplot(metaxa_PHY_genus,
taxonomic.level = "Genus",
top.otu = 12, VariableA = "country",
title = "Relative abudance plot", color = "Dark2")
View(tax_table_metaxa)
View(metaxa_PHY)
# Load data
metaxa_genus <- read.delim("~/Documents/Metagenomes_AMRIWA/R/AMRIWA/RFiles/metaxa_genus.txt")
# Create OTU table
OTU_metaxa <- metaxa_genus[,-1]
# Create tax table
tax_table_metaxa <- data.frame(str_split_fixed(data.frame(metaxa_genus) [,1], ";", 6))
colnames(tax_table_metaxa) <- c("Domain", "Phylum", "Class", "Order", "Family", "Genus")
# Combine into phyloseq object
metaxa_PHY <- phyloseq(otu_table(OTU_metaxa, taxa_are_rows=TRUE),
tax_table(as.matrix(tax_table_metaxa)), sample_data(metadata))
metadata$SSU_counts <- sample_sums(metaxa_PHY)
# With low quality (BFH24_S142, BH63_S118, FH10_S171)
metaxa_PHY = subset_samples(metaxa_PHY, name != "BFH24_S142" & name != "BH63_S118" & name != "FH10_S171")
# Feces samples (BH20_S88, BH22_S89, BH24_S90, BH25_S91)
metaxa_PHY_ww = subset_samples(metaxa_PHY, name!="BH20_S88" & name!="BH22_S89" & name!="BH24_S90" & name!="BH25_S91")
# Clear taxa that is not present in any of the remaining samples
any(taxa_sums(metaxa_PHY_ww) == 0)
metaxa_PHY <- prune_taxa(taxa_sums(metaxa_PHY_ww) > 0, metaxa_PHY_ww)
any(taxa_sums(metaxa_PHY) == 0)
metaxa_PHY_genus <- tax_glom(metaxa_PHY, "Genus")
metaxa_box <- plot_taxa_boxplot(metaxa_PHY_genus,
taxonomic.level = "Genus",
top.otu = 12, VariableA = "country",
title = "Relative abudance plot", color = "Dark2")
metaxa_box <- plot_taxa_boxplot(metaxa_PHY_genus_abun,
taxonomic.level = "Genus",
top.otu = 12, VariableA = "country",
title = "Relative abudance plot", color = "Dark2")
metaxa_box <- plot_taxa_boxplot(metaxa_PHY,
taxonomic.level = "Genus",
top.otu = 12, VariableA = "country",
title = "Relative abudance plot", color = "Dark2")
metaxa_PHY_abun <- core(metaxa_PHY, detection = 10, prevalence = 20 / 89)
metaxa_box <- plot_taxa_boxplot(metaxa_PHY_abun,
taxonomic.level = "Genus",
top.otu = 12, VariableA = "country",
title = "Relative abudance plot", color = "Dark2")
