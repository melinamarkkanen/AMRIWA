SAMPLES, = glob_wildcards("data/{sample}_R1_001.fastq.gz")

rule all:
	input:
		expand("data/FASTQC/{sample}_{read}_001_fastqc.zip", sample=SAMPLES, read=["R1", "R2"]),
		expand("trimmed_data/FASTQC/{sample}_{read}_trimmed_fastqc.zip", sample=SAMPLES, read=["R1", "R2"]),
#		expand("trimmed_data/{sample}_{read}_trimmed.fastq", sample=SAMPLES, read=["R1", "R2"]),
#		expand("metaxa2/{sample}", sample=SAMPLES),
#		expand("metaxa2/{sample}.taxonomy.txt", sample=SAMPLES),
#		expand("metaxa2/{sample}_level_6.txt", sample=SAMPLES),		
		"resfinder_db/resfinder.1.bt2",
#		expand("resfinder_out/{sample}.bam", sample=SAMPLES),
		expand("resfinder_out/{sample}_sort.bam", sample=SAMPLES),
		"data/multiqc_report.html",
		"trimmed_data/multiqc_report.html"

rule fastqc_raw:
	input:
		"data/{sample}_{read}_001.fastq.gz"
	output:
		"data/FASTQC/{sample}_{read}_001_fastqc.zip"
	message:
		"-- Quality check of raw data with Fastqc --"
	conda:
		"envs/QC_env.yml"
	threads:
		2
	shell:
              "fastqc --quiet -t {threads} --outdir data/FASTQC -f fastq {input}"

rule multiqc_raw:
	input:
		expand("data/FASTQC/{sample}_{read}_001_fastqc.zip", sample=SAMPLES, read=["R1", "R2"])
	output:
		"data/multiqc_report.html"
	message:
		"-- Running MultiQC for raw data --"
	conda:
		"envs/QC_env.yml"
	shell:
		"multiqc -f --interactive --quiet data/ -o data/"

rule cutadapt:
	input:
		fw= "data/{sample}_R1_001.fastq.gz",
		rv= "data/{sample}_R2_001.fastq.gz"
	output:
		fw= "trimmed_data/{sample}_R1_trimmed.fastq.gz",
		rv= "trimmed_data/{sample}_R2_trimmed.fastq.gz",
		log= "trimmed_data/{sample}.trimmed.txt"
	message:
		"-- Running Cutadapt --"
	conda:
		"envs/cutadapt.yml"
	shell:
		"cutadapt -a CTGTCTCTTATACACATCT -A CTGTCTCTTATACACATCT -O 10 -m 30 -q 20 \
                                {input.fw} {input.rv} -o {output.fw} -p {output.rv} > {output.log}"

rule fastqc_trim:
	input:
		"trimmed_data/{sample}_{read}_trimmed.fastq.gz"
	output:
		"trimmed_data/FASTQC/{sample}_{read}_trimmed_fastqc.zip"
	message:
		"-- Quality check of trimmed data with Fastqc --"
	conda:
		"envs/QC_env.yml"
	threads:
		2
	shell:
		"fastqc --quiet -t {threads} --outdir trimmed_data/FASTQC -f fastq {input}"

rule multiqc_trim:
	input:
		expand("trimmed_data/FASTQC/{sample}_{read}_trimmed_fastqc.zip", sample=SAMPLES, read=["R1", "R2"])
	output:
		"trimmed_data/multiqc_report.html"
	message:
		"-- Running MultiQC for trimmed data--"
	conda:
		"envs/QC_env.yml"
	shell:
		"multiqc -f --interactive --quiet trimmed_data/ -o trimmed_data/"

#rule gunzip:
#	input:
#		expand("trimmed_data/{sample}_{read}_trimmed.fastq.gz", sample=SAMPLES, read=["R1", "R2"])
#	output: 
#		temp(expand("trimmed_data/{sample}_{read}_trimmed.fastq", sample=SAMPLES, read=["R1", "R2"]))
#	message:
#		"-- Gunzipping read files --"
#	shell:
#		"gunzip -c {input} > {output}"			# stuck here

#rule metaxa2_1:
#	input:
#		fw= expand("trimmed_data/{sample}_R1_trimmed.fastq", sample=SAMPLES),
#		rv= expand("trimmed_data/{sample}_R2_trimmed.fastq", sample=SAMPLES)	
#	output:
#		expand("metaxa2/{sample}", sample=SAMPLES)
#	message:
#		"-- Running metaxa2_1 --"
#	conda:
#		"envs/metaxa.yml"
#	threads:
#		2
#	shell:
#		"metaxa2 -1 {input.fw} -2 {input.rv} -o {output} --align-none --plus --graphical F -t {threads}"

#rule metaxa2_2:
#	input:
#		expand("metaxa2/{sample}.taxonomy", sample=SAMPLES)
#	output:
#		"metaxa2/{sample}_level_6.txt"
#	message:
#		"-- Running metaxa2_2 --"
#	conda:
#		"envs/metaxa.yml"
#	threads:
#		1
#	shell:
#		"metaxa2_ttt -i {input} -o {output}"

#rule metaxa2_3:
#	input:
#		"metaxa2/{sample}_level_6.txt"
#	output:
#		"metaxa2/metaxa_genus.txt"
#	message: 
#		"-- Running metaxa2_2 --"
#	conda:
#		"envs/metaxa.yml"
#	threads:
#		1
#	shell:
#		"metaxa2_dc -o {output} {input}"

rule resfinder_db:
	input:
		fasta= "resfinder_db/resfinder.fasta"
	output:
		indexed_db= "resfinder_db/resfinder.1.bt2"
	message:
		"-- ResFinder db --"
	conda:
		"envs/bowtie2.yml"
	threads:
		1
	shell:
		"bowtie2-build {input.fasta} resfinder_db/resfinder"

rule resfinder_mapping:
        input:
                fw= expand("trimmed_data/{sample}_R1_trimmed.fastq.gz", sample=SAMPLES),
                rv= expand("trimmed_data/{sample}_R2_trimmed.fastq.gz", sample=SAMPLES),
                indexed_db= "resfinder_db/resfinder.1.bt2"
        output:
                "resfinder_out/{sample}_sort.bam"
        message:
                "-- Mapping w/ ResFinder --"
        conda:
                "envs/bowtie2.yml"
        threads:
                1
        shell:
                "bowtie2 -x resfinder_db/resfinder -1 {input.fw} -2 {input.rv} -p {threads} -D 20 -R 3 -N 1 -L 20 -i S,1,0.50 | samtools view -Sbh - | samtools sort -o {output}"

#rule fastq_to_fasta:
#	input:
#               expand("trimmed_data/{sample}_{read}_trimmed.fastq.gz", sample=SAMPLES, read=["R1", "R2"])
#	output:
#               expand("fasta/{sample}_{read}_trimmed.fasta.gz", sample=SAMPLES, read=["R1", "R2"])
#	message:
#               "-- Converting fastq to FASTA --""
#	conda:
#               "envs/seqkit.yml"
#	threads:
#               1
#	shell:
#               "seqtk seq -a {input} > {output}
